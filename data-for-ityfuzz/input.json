[
  {
    "incident_id": 1,
    "incident_title": "20210522_DeFi100_S",
    "incident_date": "2021-05-22",
    "incident_description": "DeFi100 coin exit scams, and runs away with $32 million in investors funds.",
    "avg_reported_damage_in_usd": 0,
    "adversarial_contract": ""
  },
  {
    "incident_id": 2,
    "incident_title": "20211226_MetaDAO_S",
    "incident_date": "2021-12-26",
    "incident_description": "Early this morning, PeckShield, a blockchain security company, issued an alert that MetaDAO had made off with 800 ETH, worth over $3.2 million at press time, in an apparent rug pull scam. MetaDAO then transferred the stolen funds to Tornado Cash, a privacy protocol that allows users to hide their Ethereum transactions and that theoretically allows for greater anonymity. ",
    "avg_reported_damage_in_usd": 3200000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 3,
    "incident_title": "20210208_BTFinance_CS",
    "incident_date": "2021-02-08",
    "incident_description": "BT Finance BT got exploited with flash loans. Around 1.5M drained. Similar to yearn finance hack.",
    "avg_reported_damage_in_usd": 1600000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 4,
    "incident_title": "20210629_MerlinLab_RS",
    "incident_date": "2021-06-29",
    "incident_description": "Via the smart contract, a hacker deposited 0.1WBNB into the vault and then manually transferred 1000BNB into the contract to trick the contract into thinking it has received 1000BNB in rewards, which resulted in the minter producing MERL rewards. (@Rekt)Merlin was hacked due to a logic flaw in MerlinStrategyalPacabnb. Merlin's smart contract is responsible for transferring the attacker's assets into Pancakeswap to get the CAKE reward. Cake rewards are directly transferred to the Cake pool for the next round of compound interest; The attacker calls getReward() function, which is the same as Bunny's vulnerability. Cack is injected in large quantities, so that the attacker can get a large number of Merlin rewards. ",
    "avg_reported_damage_in_usd": 330000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 5,
    "incident_title": "20200419_LendfMe_S",
    "incident_date": "2020-04-19",
    "incident_description": "The main logic behind these two incidents is the incompatibility between ERC777 and those DeFi smart contracts (Reentrancy with imBTC)",
    "avg_reported_damage_in_usd": 25236849,
    "adversarial_contract": ""
  },
  {
    "incident_id": 6,
    "incident_title": "20211003_Compound_SR",
    "incident_date": "2021-10-03",
    "incident_description": "Now another ~$68.8M has been sent to the vulnerable vault, and even more COMP is being given away. Any user could call drip() on Compound’s Reservoir vault, which would refill the Comptroller and allow for even more incorrect COMP distribution. ",
    "avg_reported_damage_in_usd": 68000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 7,
    "incident_title": "20200913_bzx_CS",
    "incident_date": "2020-09-13",
    "incident_description": "DeFi lending protocol bZx was attacked again. This time hackers drained a little more over $8 million worth of cryptocurrencies leveraging a duplication bug that enabled them to make away with 219,199.66 LINK, 4,502.70 ETH, 1,756,351.27 USDT, 1,412,048.48 USDC, 667,988.62 DAI. iToken duplication bug-“double dip” problem allowing attackers to execute an exploit.",
    "avg_reported_damage_in_usd": 8000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 8,
    "incident_title": "20210518_Venus_CS",
    "incident_date": "2021-05-18",
    "incident_description": "The manipulation of XVS price— the governance token of Venus Protocol on BSC resulted in $200M+ DeFi liquidations and a $100M+ of protocol bad debt.",
    "avg_reported_damage_in_usd": 145000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 9,
    "incident_title": "20220320_Lifinance_S",
    "incident_date": "2022-03-20",
    "incident_description": "On March 20th, 2022, an attacker exploited LI.FI’s smart contract, specifically our swapping feature which allows us to perform swaps before bridging. Instead of actually swapping, they were able to call token contracts directly in the context of our contract.As a result of the exploit, anyone who gave infinite approval to our contract was vulnerable",
    "avg_reported_damage_in_usd": 600000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 10,
    "incident_title": "20200218_bZx_S",
    "incident_date": "2020-02-18",
    "incident_description": "This second hack is different from the first one in that it is indeed an oracle attack.",
    "avg_reported_damage_in_usd": 665840,
    "adversarial_contract": ""
  },
  {
    "incident_id": 11,
    "incident_title": "20210622_ElevenFinance_CSR",
    "incident_date": "2021-06-22",
    "incident_description": "Eleven Finance was exploited to drain a number of vaults at the loss about $4.6 million. The incident was due to a bug that allows the attacker to withdraw funds without burning any shares. While it appears to be a flashloan attack, it is a flashswap-assisted one. (4 malicious contract, 5 attacks)",
    "avg_reported_damage_in_usd": 4550000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 12,
    "incident_title": "20210810_PunkProtocol_CSR",
    "incident_date": "2021-08-10",
    "incident_description": "On Aug 10th, Punk Protocol was hacked for $8.95M, ~$5M of which was later returned. \"The Punk post-mortem details the vulnerability that led to the attack, and describes the root cause as a missing Modifier in the initialize() function within the CompoundModel code.\nThe hacker used delegateCall() to replace what should have been the protocol’s forgeAddress with their own malicious contract, as a parameter of the CompoundModel’s initialize() function.The lack of an “initializer” Modifier meant that the manipulated function was executed despite being associated with an unknown (and in this case malicious) contract.With the contract address now updated, the attacker was then able to call withdrawToForge, sending the assets controlled by the CompoundModel directly to the malicious contract, and into their wallet.\"",
    "avg_reported_damage_in_usd": 8950000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 13,
    "incident_title": "20210816_XSURGE_S",
    "incident_date": "2021-08-16",
    "incident_description": "On August 17, news broke that the DeFi protocol XSURGE on the BSC was attacked by a flash loan, and the stolen amount was worth 5 million U.S. dollars. Analyzing the attack transaction, the attacker borrowed BNB through lightning loan to purchase surge tokens, and then continued to sell and buy again, and finally arbitrage out of the market. Analysis of the token source code reveals that the cause of this vulnerability is the sell function in the contract The resulting reentrancy vulnerability.",
    "avg_reported_damage_in_usd": 5000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 14,
    "incident_title": "20210603_PancakeHunny_S",
    "incident_date": "2021-06-03",
    "incident_description": "This is not a Flash Loan attack.None of the Bunny and Bunny fork attacks is a Flash Loan attack. They are Performance Fee Minting Attacks. They just often get amplified/made easier with Flash Loans.Using all the wallet balance to make HUNNYBNB LP, and then uses it to calculate the profit hunnyBnbAmount, which can be easily tampered with by just sending the tokens to the minter contract.",
    "avg_reported_damage_in_usd": 113000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 15,
    "incident_title": "20210730_Levyathan_CSR",
    "incident_date": "2021-07-30",
    "incident_description": "leyvathan.finance was subject to an attack on July 30th 2021, resulting in the minting of 100,000,000,000,000,000,000,000,000 $LEV tokens and price drop to near 0. [1] The Levyathan developers left the private keys to a wallet with minting capability available on Github.\n[2] As a result of the exploit, users were forced to use emergencyWithdraw() to attempt to retrieve their staked tokens.However, the emergencyWithdraw() logic contained a bug which referenced rewardDebt (a variable related to reward calculation) instead of user.amount as the quantity of tokens to be withdrawn.",
    "avg_reported_damage_in_usd": 1500000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 16,
    "incident_title": "20210623_StableMagnet_RS",
    "incident_date": "2021-06-23",
    "incident_description": "The StableMagnet Automated Market Maker (AMM) has perpetrated a rugpull on their users in an initial attack valued upwards of $22 million. According to an analysis by REKT, that figure has now grown to $27 million and continues to rise. Its SwapUtils library code is NOT verified and *DIFFERENT* from  main Swap contract (PeckShield).",
    "avg_reported_damage_in_usd": 27000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 17,
    "incident_title": "20220402_InverseFinance_CR",
    "incident_date": "2022-04-02",
    "incident_description": "A professionally executed hack allowed an anonymous actor to manipulate the price of INV and help themself to an exclusive deal from the ETH based lending protocol.",
    "avg_reported_damage_in_usd": 15600000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 18,
    "incident_title": "20211123_PloutozFinance_S",
    "incident_date": "2021-11-23",
    "incident_description": "The hack is made possible due to the price oracle manipulation of $DOP  in  @ploutozfinance. Specifically, the hacker leverages the manipulated $DOP as collateral to borrow other assets, including $CAKE, $ETH, $BTCB etc.",
    "avg_reported_damage_in_usd": 365000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 19,
    "incident_title": "20200913_SoftYearn_CS",
    "incident_date": "2020-09-13",
    "incident_description": "Attacker managed to net a profit of $250k from a $200 outlay due to a flaw in a DeFi protocol clone’s rebase code.",
    "avg_reported_damage_in_usd": 250000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 20,
    "incident_title": "20201026_HarvestFinance_CSR",
    "incident_date": "2020-10-26",
    "incident_description": "The attacker exploited an arbitrage and impermanent loss that influences the value of individual assets inside the Y pool of Curve.fi, which is where the funds of Harvest’s vaults were investe.The attacker repeatedly exploited the effects of impermanent loss of USDC and USDT inside the Y pool on Curve.fi. They used the manipulated asset value to deposit funds into the Harvest’s vaults and obtain vault shares for a beneficial price, and later exit the vault at a regular share price generating a profit. ",
    "avg_reported_damage_in_usd": 33800000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 21,
    "incident_title": "20210917_MISO_CS",
    "incident_date": "2021-09-17",
    "incident_description": "anonymous contractor with the GH handle AristoK3 injected malicious code into the Miso front end, replacing the auction wallet address with their own and subsequently acquiring 865 Ether (ETH), valued at $3 million. ",
    "avg_reported_damage_in_usd": 3000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 22,
    "incident_title": "20210315_Pancakeswap_S",
    "incident_date": "2021-03-15",
    "incident_description": "Many DeFi protocol websites on BSC (Binance Smart Chain) were attacked by DNS, including Cream Finance and BSC header DEX PancakeSwap. The attacker requested users to submit personal private keys or mnemonics through the website. The relevant project team has passed Twitter Remind users not to visit the website and do not submit information such as private keys. Later PancakeSwap and Cream Finance both stated that they had regained access to DNS.",
    "avg_reported_damage_in_usd": 0,
    "adversarial_contract": ""
  },
  {
    "incident_id": 23,
    "incident_title": "20220430_SaddleFinance_CRS",
    "incident_date": "2022-04-30",
    "incident_description": "The exploit was possible due to a bug in an old version of the MetaSwapUtils library which doesn’t use a VirturalPrice to calculate the value of the LP token during metapool swaps.The issue had been fixed in the current version, but the swap calculation was still using the old version.",
    "avg_reported_damage_in_usd": 10400000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 24,
    "incident_title": "20200418_Uniswap_S",
    "incident_date": "2020-04-18",
    "incident_description": "The attacker exploits the vulnerability to drain the Uniswap liquidity pool of ETH-imBTC (with about 1,278 ETH).By leveraging the tokensToSend hook, the attacker contract is called after receiving ETH (i.e. the exchange ETH balance has decreased) but before the token balance is modified (i.e. the exchange token balance has not decreased). As a consequence, reentering the vulnerable tokenToEthSwapInput will re-calculate the token-ETH exchage price, but this time with less ETH and same amount of tokens in reserves. Thus, the exchange will be buying the attacker tokens, paying in ETH, at a higher price than it should.",
    "avg_reported_damage_in_usd": 220000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 25,
    "incident_title": "20210522_BoggedFinance_S",
    "incident_date": "2021-05-22",
    "incident_description": "Missing sanity check on ransfer address: self-transfer is allowed. This incident was due to a bug in the BOG token contract that is designed to be deflationary by charging 5% of the transferred amount. Specifically, among the 5% charge, 1% is burned and 4% is taken as a fee for staking profit. However, the token contract implementation only charges 1% of the transferred amount but still inflates the 4% as the staking profit. As a result, the attacker can take advantage of flashloans to significantly increase the staking amount and repeatedly perform **self-transfers **to claim the inflated staking profit. After that, the attacker immediately sells the inflated BOG for about $3.6M WBNB.",
    "avg_reported_damage_in_usd": 3600000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 26,
    "incident_title": "20220210_BabyMuskCoin_S",
    "incident_date": "2022-02-10",
    "incident_description": "The project #BabyMuskCoin has dropped 99% and appears to be a #rugpull. 1,571 $BNB (~$66K) was dumped and the funds were moved to Tornado cash.\n",
    "avg_reported_damage_in_usd": 66000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 27,
    "incident_title": "20211121_BadgerDAO_CSR",
    "incident_date": "2021-11-21",
    "incident_description": "This phishing incident that occurred on 2 Dec, 2021 was the result of a maliciously injected snippet provided by Cloudflare Workers.  Cloudflare Workers is an interface to run scripts that operate on and alter web traffic as it flows through Cloudflare proxies. The attacker deployed the worker script via a compromised API key.",
    "avg_reported_damage_in_usd": 130291778,
    "adversarial_contract": ""
  },
  {
    "incident_id": 28,
    "incident_title": "20190928_Fusion_S",
    "incident_date": "2019-09-28",
    "incident_description": "Blockchain-based swap wallet platform the Fusion Network has been hacked on September 28, resulting in the theft of $6.4 million (at the time of hack) worth of digital tokens, the company announced.",
    "avg_reported_damage_in_usd": 6400000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 29,
    "incident_title": "20220722_THORChain_CSR",
    "incident_date": "2022-07-22",
    "incident_description": "THORChain has suffered a sophisticated attack on the ETH Router, around $8m. The hacker deliberately limited their impact, seemingly a whitehat. Attacker seems to have called `returnVaultAssets` on the ETH router contract `transferOut` executed on ETH Router contract with `REFUND` memo:",
    "avg_reported_damage_in_usd": 8000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 30,
    "incident_title": "20201117_88mph_S",
    "incident_date": "2020-11-17",
    "incident_description": "88mph has a flaw in the deposit, funding, early withdrawal process which ****fails to burn**** the MPH tokens minted to the funder.(Since the hacker put all the tokens back to the MPH-ETH pool and the dev team drained the pool with another bug, there is no loss after the rescue.)",
    "avg_reported_damage_in_usd": 100000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 31,
    "incident_title": "20210527_WildCredit_S",
    "incident_date": "2021-05-27",
    "incident_description": "Wild Credit was exploited  and the hacker took 125k BNT tokens worth ~$650k. The hacker could have taken all of the 10m TVL locked in the system. The exploit happened due to a very basic issue in the smart contracts that I bet most of the followers can detect.",
    "avg_reported_damage_in_usd": 650000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 32,
    "incident_title": "20210621_ImpossibleFinance_CS",
    "incident_date": "2021-06-21",
    "incident_description": "Using a vulnerability in the LP contract, the hacker managed to swap IF into BUSD at about the price 2 times in a row, which is usually “Impossible” because of the slippage. No check on x*y=k.",
    "avg_reported_damage_in_usd": 500000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 33,
    "incident_title": "20211126_Lever_S",
    "incident_date": "2021-11-26",
    "incident_description": "On Nov-26–2021 06:48:42 PM +UTC, a hacker constructed an attack transaction: https://bscscan.com/tx/0xb5365a299c07c81670e52934893793ad7c225a5cf30b641e20b451b2b5815593\nFirst, the Lever attack contract A flashloaned 2,100 BNB from PancakeSwap and deposited 2000 BNB on Lever’s BNB vault.\nIt then borrowed 1500 BNB from Lever’s BNB vault and transferred it to Lever attack contract B. The Lever attack contract B deposited 1500 BNB and used it to drain 32.78 ETH, 1,068.05 BAKE, 167.25 XVS, 1,042.89DAI, 64,157.79 BUSD, 54,335.19USDT ,2.8806 BTC, 1,930.01CAKE, 463.0078DOT, and 332.9184 WBNB. (The total loss equals $652941.949 at present market price.)",
    "avg_reported_damage_in_usd": 652942,
    "adversarial_contract": ""
  },
  {
    "incident_id": 34,
    "incident_title": "20201011_WLEO_S",
    "incident_date": "2020-10-11",
    "incident_description": "This attack was carried out by an attacker who managed to get a hold of the private key that governed the wLEO minting contract. After investigating the addresses involved, we've found that this particular address was the only one receiving minted WLEO during the attack. It then used the \"fake\" WLEO that was minted to swap into the Uniswap pool in exchange for ETH.(LEO official)",
    "avg_reported_damage_in_usd": 42000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 35,
    "incident_title": "20201026_MakerDAO_S",
    "incident_date": "2020-10-26",
    "incident_description": "The malicious Web3 applications \"phishing dapps\" were discovered in a recent study, they pretend to be legitimate applications or services to steal cryptocurrencies. For example, since MakerDAO officially closed the single-mortgage Sai system, such phishing tools have begun to appear, and they pretended to need a new tool to help users migrate from SAI to DAI. For example, a domain name provides a simple interface to start the migration from SAI to the new DAI at a 1:1 ratio, it seems like an official channel. However, the actual transaction to be signed simply sends the SAI to an address owned by the attacker. SAI, which has been traced to more than US$100,000, was transferred to the attacker's account.",
    "avg_reported_damage_in_usd": 100000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 36,
    "incident_title": "20211127_dydx_S",
    "incident_date": "2021-11-27",
    "incident_description": "dYdX released an investigation report on the deposit contract accident on November 27, stating that there has been a serious loophole in the agent smart contract that has been handling deposits to the dYdX exchange since November 24. At around 12:00 UTC on the 27th, dYdX The team performed a white hat hacking operation to save vulnerable user funds, totaling approximately US$2 million. These funds are sent to a non-custodial escrow contract, and only the original owner of these funds can retrieve them. However, when the dYdX team performed the white hat hacking operation, an estimated $211,000 of funds was used by the MEV robot, and the user has now been fully compensated.",
    "avg_reported_damage_in_usd": 2211000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 37,
    "incident_title": "20200629_Balancer_S",
    "incident_date": "2020-06-29",
    "incident_description": "Less than 24 hours later, a second attack claimed about $2,300 worth of Compound tokens (COMP).",
    "avg_reported_damage_in_usd": 2300,
    "adversarial_contract": ""
  },
  {
    "incident_id": 38,
    "incident_title": "20211212_BentFinance_SR",
    "incident_date": "2021-12-12",
    "incident_description": "Bent-Finance-Deployer deploys 0xb45d6c0897721bb6ffa9451c2c80f99b24b573b9 contract containing backdoor line in the last line of upgradeVersion() method",
    "avg_reported_damage_in_usd": 1675000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 39,
    "incident_title": "20201128_SushiSwap_S",
    "incident_date": "2020-11-28",
    "incident_description": "The attacker uses SLP and WETH to create a new token pool, uses the SLP1 (WETH/SLP(USDT/WETH) of the new token pool to convert in Sushi Maker, and uses a small amount of SLP to transfer all SLPs in the Sushi Maker contract to the token pool created by himself. All the swap fees of the corresponding transaction pair within a period of time will be collected into the bag. Repeat this process for other trading pairs and continue to make profits",
    "avg_reported_damage_in_usd": 15000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 40,
    "incident_title": "20220425_Medamon_S",
    "incident_date": "2022-04-25",
    "incident_description": "The Medamon project was exploited by a flash loan attack, resulting in a loss of $3,159.",
    "avg_reported_damage_in_usd": 3159,
    "adversarial_contract": ""
  },
  {
    "incident_id": 41,
    "incident_title": "20210125_SushiSwap_S",
    "incident_date": "2021-01-25",
    "incident_description": "The problem was that the transaction fee of the DIGG-WBTC trading pair was taken away by the attacker through special means:The **absence of a bridge** that should have sent a reward to stakers resulted in oversized fees to the hacker.",
    "avg_reported_damage_in_usd": 103842,
    "adversarial_contract": ""
  },
  {
    "incident_id": 42,
    "incident_title": "20210724_THORChain_S",
    "incident_date": "2021-07-24",
    "incident_description": "Hackers airdrop UniH tokens to Ethereum addresses as bait to steal RUNE tokens in users' wallets. Hackers have airdropped UniH tokens with malicious contracts to at least 76,000 Ethereum addresses. Once receiving users sell their newly received UniH tokens (or even just approve the sale) on decentralized trading platforms such as Uniswap, the hackers will They can steal any RUNE tokens they have in their wallets. This is because the RUNE token uses a non-standard token contract called \"tx.origin\". According to Thorchain’s RUNE token contract code “Beware of phishing contracts that may steal tokens by intercepting tx.origin”, it knows that this type of attack may occur",
    "avg_reported_damage_in_usd": 76000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 43,
    "incident_title": "20220128_FlurryFinance_S",
    "incident_date": "2022-01-28",
    "incident_description": "Around $295,000 has been drained from the vaults of decentralized finance (DeFi) platform Flurry Finance following a hack on its smart contracts. The attack took place on Tuesday (February 22) when a malicious hacker deployed an exploit that enabled the increase of a multiplier influencing the balance of rhoToken, a deposit token used by Flurry Finance for yield aggregation.",
    "avg_reported_damage_in_usd": 290000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 44,
    "incident_title": "20220327_RevestFinance_SR",
    "incident_date": "2022-03-27",
    "incident_description": "On March 27th, 2022, at 1:41 AM UTC, the Revest Protocol suffered an exploit in which roughly $2M worth of tokens (namely BLOCKS, ECO, and RENA) were stolen from our Ethereum-based token vault. ",
    "avg_reported_damage_in_usd": 2005000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 45,
    "incident_title": "20200801_YYFI_S",
    "incident_date": "2020-08-01",
    "incident_description": "YYFI pulled an exit scam by minting 1,000,000 tokens.",
    "avg_reported_damage_in_usd": 0,
    "adversarial_contract": ""
  },
  {
    "incident_id": 46,
    "incident_title": "20210316_IronFinance_CS",
    "incident_date": "2021-03-16",
    "incident_description": "The Faas upgrade changes the reward rate from gwei to a normal integer, and the team was unware of this. This caused the pools' rewards inflated by 10^18 times.",
    "avg_reported_damage_in_usd": 170000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 47,
    "incident_title": "20210305_PaidNetwork_CR",
    "incident_date": "2021-03-05",
    "incident_description": "The attacker used a compromised private key to the original contract deployer to leverage the upgrade function of the smart contract. The attacker then proceeded to ‘upgrade’ to a new smart contract which had the ability to burn and re-mint tokens.",
    "avg_reported_damage_in_usd": 27418034,
    "adversarial_contract": ""
  },
  {
    "incident_id": 48,
    "incident_title": "20211123_OpticsBridge_S",
    "incident_date": "2021-11-23",
    "incident_description": "Optics Bridge was attacked and ownership of the multi-signature wallet was transferred",
    "avg_reported_damage_in_usd": 0,
    "adversarial_contract": ""
  },
  {
    "incident_id": 49,
    "incident_title": "20200312_MakerDAO_S",
    "incident_date": "2020-03-12",
    "incident_description": "In mid-March, mempools got congested with useless transactions on purpose, as part of a plan to win zero-bid auctions for ETH on MakerDAO under just these conditions.Falling ETH prices triggered auctions of collateral on MakerDAO. Because the mempools were clogged, bidders could not get bids on those auctions through in many cases, allowing attackers to win ETH collateral with bids worth $0.",
    "avg_reported_damage_in_usd": 8310000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 50,
    "incident_title": "20220201_MOX_S",
    "incident_date": "2022-02-01",
    "incident_description": "MOX was hacked because transferFrom did not check the authorization limit.",
    "avg_reported_damage_in_usd": 0,
    "adversarial_contract": ""
  },
  {
    "incident_id": 51,
    "incident_title": "20200811_NEXE_S",
    "incident_date": "2020-08-11",
    "incident_description": "Two small-scale token projects, NUGS and C, appeared to have committed \"travel fraud\" shortly after being launched on Uniswap. The NUGS project blamed this move on a \"smart contract vulnerability\". On its official telegram channel, NUGS stated that its smart contract is now \"unfixable.\" Another project, NEXE, is also suspected to have gone, and the social media account of this project has been deleted.",
    "avg_reported_damage_in_usd": 0,
    "adversarial_contract": ""
  },
  {
    "incident_id": 52,
    "incident_title": "20210627_SharedStake_S",
    "incident_date": "2021-06-27",
    "incident_description": "Developer ‘rug pulls’  Decentralized Ethereum 2.0 staking protocol SharedStake, SGT token falls 95%. SharedStake has a developer on the loose that used the admin key and exploited the protocol’s governance token SGT (coinmarketcap). The Ethereum 2.0 staking solution SharedStake released an attacked report, stating that the reason the SharedStake token was minted before the official launch was due to the use of **vulnerabilities in time-locked contracts** (that is, smart contracts that perform certain operations at a fixed time) by internal personnel. The vulnerability was submitted to the team by the white hat Lucash-dev on April 26. Because a team member had permission to view the vulnerability, he used the vulnerability to cast a value of about 50 on the main network four times on June 19 and 23. Ten thousand USD tokens were sold and mortgaged after the official launch. Although there is not enough evidence, the core members of SharedStake suspect that it was the work of a new team member. SharedStake stated that it is currently fixing the loopholes and will manage multi-signature agreement funds in the future.(slowmist)",
    "avg_reported_damage_in_usd": 500000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 53,
    "incident_title": "20210227_Furucombo_CSR",
    "incident_date": "2021-02-27",
    "incident_description": "Evil contract exploit: the attacker made the Furucombo proxy contract think that Aave V2 had a new implementation.The incident was due to a flaw of inappropriate trust in the protocol, which is exploited to cascadingly misuse the allowed spending of this protocol on its users.",
    "avg_reported_damage_in_usd": 14000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 54,
    "incident_title": "20210527_JulSwap_S",
    "incident_date": "2021-05-27",
    "incident_description": "Another BSC project, JulSwap, was hacked of a similar nature to burgerswap, which caused a 95 percent price crash. (No check on x*y=k.)\nHowever, its founder has confirmed that there has been no exploit or hack at the protocol level (https://coinmarketcap.com/zh/headlines/news/burgerswap-flash-loan-attack-binance-smart-chain-bsc-sweeps-7-million-losses/).\nIt's irresponsible to call this \"\"NO hack or exploit\"\" and not do anything to fix it. (@Mudit__Gupta https://twitter.com/Mudit__Gupta/status/1398179149102026754)",
    "avg_reported_damage_in_usd": 1500000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 55,
    "incident_title": "20210616_Alchemix_CSR",
    "incident_date": "2021-06-16",
    "incident_description": "At roughly 12:30 PM UTC some users of the Alchemix alETH vault discovered they had no outstanding debt even though they previously borrowed alETH at a 4:1 collateral ratio. In addition to this, the debt ceiling of almost 2,000 ETH was freed up to mint new alETH again. Nobody lost any funds but some users actually gained. \"\"alEth bug on Alchemix\nPeople who deposited Eth and took a loan in alEth could take their Eth deposit without paying loan.@Nomaticcap https://twitter.com/Nomaticcap/status/1405172780606410753\"\"",
    "avg_reported_damage_in_usd": 65150000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 56,
    "incident_title": "20220127_Qubit_CSR",
    "incident_date": "2022-01-27",
    "incident_description": "At 9:34PM UTC on January 27th, 2022, an attacker began their exploit of Qubit Finance’s Ethereum-BSC bridge. This exploit ended up netting them 77,162 qXETH ($185 million), which they then used to borrow and convert 15,688 wETH ($37.6 million), 767 BTC-B ($28.5 million), approximately $9.5 million in various stablecoins, and ~$5 million in CAKE, BUNNY, and MDX.At $80 million TVL (Total Value Lost), this is by far the largest exploit of 2022 to date. One of the root causes of the vulnerability was the fact that tokenAddress.safeTransferFrom() does not revert when the tokenAddress is the zero (null) address (0x0…000).",
    "avg_reported_damage_in_usd": 80000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 57,
    "incident_title": "20201117_OriginDollar_CSR",
    "incident_date": "2020-11-17",
    "incident_description": "The origin protocol was attacked by exploiting its flawed handling of the mint logic in its VaultCore smart contract.This incident was due to a bug in the protocol  (1) without validating the transferred-in assets and (2) without enforcing reentrancy protection on the mint logic. The exploitation leads to a greatly inflated totalSupply of the rebasing token, i.e., OUSD. The attacker then makes use of the inflation to redeem and drain about $7.7M of assets from the OUSD vault. This hack is initialized from a malicious ERC20-like contract (located at 0x47c3). This malicious contract implements a hook that will be invoked whenever the transferFrom() (function signature: 0x23b872dd) is being called.",
    "avg_reported_damage_in_usd": 7700000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 58,
    "incident_title": "20210710_Chainswap_CSR",
    "incident_date": "2021-07-10",
    "incident_description": "On July 11, 2021, the cross-chain bridge project Chainswap was exploited, which resulted in a total loss of 20 assets on the bridge with a combined value of $4 million.",
    "avg_reported_damage_in_usd": 4000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 59,
    "incident_title": "20201106_CheeseBank_S",
    "incident_date": "2020-11-06",
    "incident_description": "This particular hack drains $3.3 million of USDC/USDT/DAI from Cheese Bank by exploiting a bug in its way to measure asset price from an AMM-based oracle.",
    "avg_reported_damage_in_usd": 3300000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 60,
    "incident_title": "20210903_DAOMaker_CS",
    "incident_date": "2021-09-03",
    "incident_description": "On 3rd of September 2021, around 10:00 PM UTC, DAO Maker, a decentralized finance platform on the Ethereum blockchain that enables startups to raise funds, was hacked for almost $4 million (although the true realized cost to DAO Maker is far greater).A collection of altcoins were stolen; DeRace Token (DERC), Capsule Coin (CAPS) Showcase (SHO) and Coinspaid (CPD). DAOMaker’s init() function was left vulnerable, allowing the attacker to reinitialise 4 token contracts with malicious data. Then, the emergencyExit() function was used to withdraw the funds from each.",
    "avg_reported_damage_in_usd": 4000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 61,
    "incident_title": "20220411_CFToken_S",
    "incident_date": "2022-04-11",
    "incident_description": "The $CF token contract is fundamentally flawed by allowing anyone to drain others' $CF balance. So far, the loss is about ~$1.9M and the pancakeswap $CF - $USDT pair is already affected.",
    "avg_reported_damage_in_usd": 1900000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 62,
    "incident_title": "20220312_Paraluni_S",
    "incident_date": "2022-03-12",
    "incident_description": "On March 13, 2022, the SlowMist intelligence zone received news that the metaverse project Paraluni was the victim of a $1.7 million hack. The depositByAddLiquidity function within the MasterChef contract does not check whether the LP token constructed by the incoming token array parameter _tokens corresponds to the specified _pid parameter and is consistent with the LP token (USDT-BUSD LP) in the pool.There is also no reentrancy restriction when adding liquidity calculations, leading to the use of malicious contracts to conduct reentrancy attacks.",
    "avg_reported_damage_in_usd": 1700000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 63,
    "incident_title": "20220120_KingfundFinance_S",
    "incident_date": "2022-01-20",
    "incident_description": "#RugPull PeckShield has detected that @kingfundFi rugged, more than 300 WBNB! #BSC #Polygon",
    "avg_reported_damage_in_usd": 141000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 64,
    "incident_title": "20210919_pNetwork_CS",
    "incident_date": "2021-09-19",
    "incident_description": "On September 19th, 2021 at 5:20pm UTC time, the pNetwork system was attacked by a hacker who performed the offensive against multiple pTokens bridges. However, the exploit was only successful on the pBTC-on-BSC cross-chain bridge, which bridge was exploited and 277 BTC, stolen from the pBTC-on-BSC collateral. These smart contracts created a series of event logs: one of those being a legit peg-out request, while the others were faulty peg-out requests emitted by the attacker’s smart contracts rather than from the pToken ones.Due to a bug in the section of the Rust code in charge of extracting these log events, both the legitimate and the faulty logs were extracted and erroneously processed.",
    "avg_reported_damage_in_usd": 0,
    "adversarial_contract": ""
  },
  {
    "incident_id": 65,
    "incident_title": "20211102_VesperFinance_S",
    "incident_date": "2021-11-02",
    "incident_description": "An exploit in the beta Vesper Lend Rari Fuse Pool #23. ",
    "avg_reported_damage_in_usd": 300000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 66,
    "incident_title": "20211006_MyFarmPet_S",
    "incident_date": "2021-10-06",
    "incident_description": "The attacker called getBaseTokenPrice multiple times to manipulate the price oracle.",
    "avg_reported_damage_in_usd": 31422,
    "adversarial_contract": ""
  },
  {
    "incident_id": 67,
    "incident_title": "20201228_CoverProtocol_CSR",
    "incident_date": "2020-12-28",
    "incident_description": "This incident was due to a business bug (memory/Storage misuse) in the protocol that mis-calculates the reward amount for staking users. 9.4m taken, 3.2m recovered and $6.2m lost. The bug that caused this attack is present on line 118 of the Blacksmith.sol smart contract. The contract caches the pool data in memory to save some gas, updates the pool data in storage but forgets to update the cached data. The outdated cached data is later used in calculations and that enables the hack.",
    "avg_reported_damage_in_usd": 9400000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 68,
    "incident_title": "20211027_BXH_S",
    "incident_date": "2021-10-27",
    "incident_description": "A hack on Boy X Highspeed (BXH), a decentralized cross-chain exchange, that drained $139 million of funds was probably the result of a leaked administrator key, and possibly an inside job.",
    "avg_reported_damage_in_usd": 139000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 69,
    "incident_title": "20211020_PancakeHunny_CSR",
    "incident_date": "2021-10-20",
    "incident_description": "The hack is made possible due to a profit inflation bug, which converts the relatively small amount of harvested $ALPACA to large amount of $TUSD for staking. These converted TUSDs are then counted as profit, now inflated to mint large amount of $HUNNY!",
    "avg_reported_damage_in_usd": 1900000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 70,
    "incident_title": "20210508_RariCapital_CSR",
    "incident_date": "2021-05-08",
    "incident_description": "Rari Capital’s Ethereum Pool contract calculates the ibETH/ETH exchange rate by using the ibETH.totalETH()/ibETH.totalSupply() calculation from the ibETH contract, which can lead to incorrect assumption (e.g. during ibETH.work(), where debt value gets updated towards the very end).ibETH.totalETH()` is vulnerable to manipulation inside the `ibETH.work` function, and a user of `ibETH.work` can call any contract it wants to inside `ibETH.work`, including the Rari Capital Ethereum Pool deposit and withdrawal functions. Unfortunately, the Rari Capital contributors were not aware that `ibETH.totalETH()` could be manipulated for the duration of these external calls from `ibETH.work`  (external payable)",
    "avg_reported_damage_in_usd": 10000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 71,
    "incident_title": "20210408_UraniumFinance_S",
    "incident_date": "2021-04-08",
    "incident_description": "An exploiter was able to constantly grab the contents of the RADS pool and all of the RADS/sRADS rewards and sell them for $1.3Mil worth of BUSD and BNB. This drastically dumped the price of RADS and the exploiter then transferred the BUSD and BNB to his wallet.",
    "avg_reported_damage_in_usd": 13000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 72,
    "incident_title": "20210208_GrowthDefi_CR",
    "incident_date": "2021-02-08",
    "incident_description": "By forcing the staker contract to accept a liquidity pair containing a fake token, the attacker was able to remove $1.3 million in liquidity. The attacker created a fake token called AXZ and supplied rAXZZ/GRO liquidity. He then staked it in the contract and pulled out the other pair.",
    "avg_reported_damage_in_usd": 1300000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 73,
    "incident_title": "20210625_xWinFinance_S",
    "incident_date": "2021-06-25",
    "incident_description": "xWin Finance was exploited and the attacker gained about $270k. This incident was due to an invalid slippage control in the protocol, which is exploited in a flashloan to obtain extra xWin rewards. This incident. was due to a bug in the internal _swapBNBToTokens() function of xWinFund contract which implements a price slippage control. However, the logic of slippage control is invalid. The hacker made use of this bug and gained rewards (in terms of 303,998.86 xWin tokens) from the contract to swap for BNB (peckshield).",
    "avg_reported_damage_in_usd": 270000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 74,
    "incident_title": "20210219_F2Pool_S",
    "incident_date": "2021-02-19",
    "incident_description": "F2Pool was attacked by DDos, and some addresses experienced short-term failures, which have been restored.",
    "avg_reported_damage_in_usd": 0,
    "adversarial_contract": ""
  },
  {
    "incident_id": 75,
    "incident_title": "20210507_ValueDeFi_SR",
    "incident_date": "2021-05-07",
    "incident_description": "Incorrect weighted constant product invariant calculation.The incident was due to the improper use of a complex exponentiation power() function behind the calculation and enforcement of the weighted constant product invariant. ",
    "avg_reported_damage_in_usd": 11000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 76,
    "incident_title": "20220323_RoninNetwork_SC",
    "incident_date": "2022-03-23",
    "incident_description": "There has been a security breach on the Ronin Network. Earlier today, we discovered that on March 23rd, Sky Mavis’s Ronin validator nodes and Axie DAO validator nodes were compromised resulting in 173,600 Ethereum and 25.5M USDC drained from the Ronin bridge in two transactions",
    "avg_reported_damage_in_usd": 625000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 77,
    "incident_title": "20220412_ElephantMoney_CRS",
    "incident_date": "2022-04-12",
    "incident_description": "Elephant Money, a stable coin platform that uses the TRUNK token became a victim of the flash loan attack, which manipulated a token price oracle leading to a loss of $22.2 million",
    "avg_reported_damage_in_usd": 11100000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 78,
    "incident_title": "20210516_BearnFi_CSR",
    "incident_date": "2021-05-16",
    "incident_description": "This incident was due to the mis-matched asset denomination implicitly assumed by BvaultsBank and its BvaultsStrategy strategy. Specifically, the BvaultsBank's withdraw logic assumes the withdrawn amount is denominated in BUSD while the BvaultsStrategy's withdraw logic assumes the withdrawn amount is denominated in ibBUSD. Note that ibBUSD is an interest-bearing token and is more expensive than BUSD. As a result, the withdraw request of 100 BUSD effectively leads to the withdraw of 100 ibBUSD. The exploitation of the issue leads to about $11M funds drained from the BvaultsBank contract.",
    "avg_reported_damage_in_usd": 18000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 79,
    "incident_title": "20210703_Chainswap_S",
    "incident_date": "2021-07-03",
    "incident_description": "The cross-chain asset bridge Chainswap announced the details of the hacking incident today, saying that at 04:30 AM UTC on July 2nd, they noticed an abnormality on the cross-chain bridge. Some users reported that their tokens were actively removed from wallets interacting with ChainSwap. After it was taken out, the ChainSwap team immediately froze the cross-chain bridge, shut down all nodes, and deployed the fix within 30 minutes. The team of the affected project received an alert. According to the announcement, the stolen assets include 32237576.17 TSHP, 80052.82027 CORRA, 643405.7157 BLANK, 2922720 RAI, 19392.27712 ROOM, 4820309.98 DEXT, 210,108.22 UMB, 55476328.8 FAIR. ",
    "avg_reported_damage_in_usd": 800000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 80,
    "incident_title": "20210524_AutoSharkFinance_CSR",
    "incident_date": "2021-05-24",
    "incident_description": "On May 24, 2021, 09:41:49 PM +UTC, less than 5 days after the bunny hack. A copycat hacker used 100K BNB of flash loan and minted 135M of SHARK token from Autoshark, a copycat of Bunny.",
    "avg_reported_damage_in_usd": 248874,
    "adversarial_contract": ""
  },
  {
    "incident_id": 81,
    "incident_title": "20200215_bZx_CS",
    "incident_date": "2020-02-15",
    "incident_description": "There are quite a few misunderstandings circulating around about the nature of this particular hack. We emphasize that this is not an oracle attack. Instead, it is a clever arbitrage execution, which did exploit a bug in bZx smart contract implementation to allow for the leakage of supposedly-locked bZx funds to Uniswap and further absorb the leaked funds into a Compound position",
    "avg_reported_damage_in_usd": 355880,
    "adversarial_contract": ""
  },
  {
    "incident_id": 82,
    "incident_title": "20220104_ArbixFinance_RS",
    "incident_date": "2022-01-04",
    "incident_description": "~$10 million taken, and no advanced attack techniques in sight.Arbix Finance labelled themselves as an arbitrage-focused project on BSC, in which users could deposit into single-asset vaults in order “to gain optimal yield with low risk”.",
    "avg_reported_damage_in_usd": 10000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 83,
    "incident_title": "20201102_AxionNetwork_S",
    "incident_date": "2020-11-02",
    "incident_description": "The hacker managed to mint around ~80 billion AXN tokens by utilizing the ***unstake function*** of the Axion Staking contract.The hacker proceeded to then dump the tokens on the AXN Uniswap exchange for Ether, repeating this process until the Uniswap exchange was drained and the token price was driven to 0.",
    "avg_reported_damage_in_usd": 500000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 84,
    "incident_title": "20201121_PickleFinance_CSR",
    "incident_date": "2020-11-21",
    "incident_description": "Taking advantage of multiple flaws in the system, including issues with the Jar swap and Jar convert logic, the attacker use fake contract addresses of _fromJar and _toJar when calling the swapExactJarForJar function in the Controller contract, and exchanged fake coins for the real DAI in the contrac.",
    "avg_reported_damage_in_usd": 19759355,
    "adversarial_contract": ""
  },
  {
    "incident_id": 85,
    "incident_title": "20200926_KuCoin_RS",
    "incident_date": "2020-09-26",
    "incident_description": "KuCoin disclosed today a mega hack. In a statement posted on its website, the company confirmed that a threat actor breached its systems and emptied its hot wallets of all funds.",
    "avg_reported_damage_in_usd": 150000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 86,
    "incident_title": "20220214_TitanoFinance_S",
    "incident_date": "2022-02-14",
    "incident_description": "The code used to create Titano PLAY, however, was based on pre-existing code that had been employed successfully in other projects for years. Since the code was preexisting and already working, we hired and contracted a developer to assist with implementing it into Titano. This contractor had been recommended to us and was fully public on a well known freelancing website. \nThe problem occurred when we trusted the contractor to deploy the PLAY contract. Despite transferring ownership back to us after deployment it was the same deployer wallet that would allow for the hack that stole all the Titano from our PLAY protocol two days ago.",
    "avg_reported_damage_in_usd": 1900000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 87,
    "incident_title": "20220425_WienerDoge_S",
    "incident_date": "2022-04-25",
    "incident_description": "The hacker flashloaned 2,900 BNB, swapped 5,974,259,851,654 WDOGE tokens from the WDOGE and BNB transaction pairs, and then retransferred 4,979,446,261,701 tokens into the transaction pairs.\nThe hacker then called the skim function to re-withdraw the excess WDOGE tokens from the transaction pair, and due to the deflationary nature of the tokens, 199,177,850,468 tokens are burned off at the same time during the transfer of the transaction pair to the attack address.\nAt this point the k-value of the transaction pair had been destroyed, and the hacker used the remaining WDOGE tokens to successfully swap out 2,978 BNBs within the transaction pair and transferred the profited 78 $BNBs to the profited address.",
    "avg_reported_damage_in_usd": 30000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 88,
    "incident_title": "20220421_ZEED_S",
    "incident_date": "2022-04-21",
    "incident_description": "The exploit was linked with the security loop in the reward distribution system of the protocol",
    "avg_reported_damage_in_usd": 1000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 89,
    "incident_title": "20210228_Armor_S",
    "incident_date": "2021-02-28",
    "incident_description": "DeFi Insurance Agreement The Armor team claimed that some team members were scammed by OTC and were defrauded of 1.2 million ARMOR tokens. The scammers have already dumped all tokens for a profit of 600 ETH (approximately US$850,000). The Armor team disclosed that the scammers pretended to be strategic investors on social media, falsely claiming to purchase tokens from the team through OTC, defrauded 1.2 million ARMOR tokens in OTC transactions, and then sold them. According to the Armor team, \"No hacking, the project is still safe.\"",
    "avg_reported_damage_in_usd": 850000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 90,
    "incident_title": "20201114_ValueDeFi_CSR",
    "incident_date": "2020-11-14",
    "incident_description": "Value DeFi was exploited to drain $7.4 million of DAI from its pooled MultiStablesVault. The incident was due to a bug in the way to measure asset price from an AMM-based oracle.",
    "avg_reported_damage_in_usd": 7200000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 91,
    "incident_title": "20211221_VisorFinance_CSR",
    "incident_date": "2021-12-21",
    "incident_description": "On December 21st 2021 02:29:11 PM UTC a malicious contract drained Visor Finance’s staking contract of 8,812,958 VISR tokens. The attack was made possible by implementing the IVisor delegateTransferERC20 interface and calling the staking contract’s withdraw function with the desired VISR amount. Dependence on arbitrary IVisor delegateTransferERC20 implementation by caller allowed for the attack to take place. \"Due to a vulnerable require() check in the vVISR Rewards Contract’s deposit() function, the hacker was able to mint unlimited shares using their own contract.\nAs long as the hacker passes their own contract as “from” and the contract has an Owner() method of msg.sender, then they can mint as many shares as they want to any address using vvisr.mint().\"",
    "avg_reported_damage_in_usd": 8200000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 92,
    "incident_title": "20220126_InfinityToken_S",
    "incident_date": "2022-01-26",
    "incident_description": "#RugPull PeckShield has detected that  $InfinityToken(https://bscscan.com/token/0x52e4339b4b9ff254738d6e971e83440f60dc029c) rugged, more than 1,390 WBNB! #BSC",
    "avg_reported_damage_in_usd": 0,
    "adversarial_contract": ""
  },
  {
    "incident_id": 93,
    "incident_title": "20210629_THORChain_CS",
    "incident_date": "2021-06-29",
    "incident_description": "$140k in funds were taken by a targeted exploit on a logic error in the ETH-Bifrost.The bug was that all non-ETH assets were being initialised with common.ETHAsset (ETH), but if the symbol returned “ETH”, it would skip. This means that it was being reported as ETH.ETH and not ETH.ETH-0xaddress.",
    "avg_reported_damage_in_usd": 140000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 94,
    "incident_title": "20201214_DeTradeFund_S",
    "incident_date": "2020-12-14",
    "incident_description": "According to reports, DeTrade Fund was the biggest scam on Friday, the platform allowing any user to profit by putting money into its arbitrage system and defrauding more than 1,400 ETH raised in a pre-sale.",
    "avg_reported_damage_in_usd": 1200000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 95,
    "incident_title": "20211123_OlympusDAO_S",
    "incident_date": "2021-11-23",
    "incident_description": "One bond is for liquidity tokens (LP) for the OHM/DAI pool on SushiSwap. Olympus DAO mistakenly believed they had shut down this bond but didn't actually do so.\nSomebody used this bond to sell $50,000 of OHM/DAI LP tokens for 1,697 OHM, worth $1.43 million. Instead, they should have received only around $52,000 to $55,000 of OHM. The OHM tokens they received will be distributed over five days",
    "avg_reported_damage_in_usd": 1430000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 96,
    "incident_title": "20220108_LCX_RS",
    "incident_date": "2022-01-08",
    "incident_description": "At roughly 11:23 PM CET on January 9th, LCX’s Technology team detected unauthorized access of one crypto wallet at the LCX platform.",
    "avg_reported_damage_in_usd": 7940000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 97,
    "incident_title": "20210404_ForceDAO_CS",
    "incident_date": "2021-04-04",
    "incident_description": "xforce vault didn't check the return value on transferFrom().They use the years old MiniMeToken contract which doesn't revert but returns false when you transferFrom without approval or not enough funds. So that's problematic per se. Should've wrapped it in a safeTransferFrom.",
    "avg_reported_damage_in_usd": 367000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 98,
    "incident_title": "20221101_SQUID_S",
    "incident_date": "2022-11-01",
    "incident_description": "Squid Game  is suspected of running off or being attacked, with an estimated loss of 12 million USDT. \nall the tokens in the current Pancake pledge pool have been transferred to the address: 0x71D934Aa2119CA3995F702f075d540f7A6b0f728 through two transactions. The hash value of one of the transactions on the BSC is: 0xf7c9d0e5a81999f9e06fe78df7ce41da112d8bd4f2da7b16cfdbbe46c92cb6af. The address for initiating the token withdrawal transaction is 0x614826D885FF973324a5C3f43369d7C413a88aea. In addition, traders from the address 0x1f5eabba9c56bca4a7828969b79bc87051125b31 sold SQUID tokens to transfer the BNB in ​​the trading pair in Pancake to: 0x71D934Aa2119CA3995F702f075d540f7A6b0f728.",
    "avg_reported_damage_in_usd": 12000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 99,
    "incident_title": "20210526_MerlinLab_CR",
    "incident_date": "2021-05-26",
    "incident_description": "Just 8 hours after the first exploitation, Merlin Lab suffered a second exploitation with ~200 ETH.",
    "avg_reported_damage_in_usd": 550000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 100,
    "incident_title": "20220118_Multichain_S",
    "incident_date": "2022-01-18",
    "incident_description": "The cross-chain bridge Multichain said that an important vulnerability affecting six tokens of WETH, PERI, OMT, WBNB, MATIC, and AVAX was officially discovered. Now the vulnerability has been successfully repaired, and all users' assets are safe and cross-chain. Transactions will not be affected. However, if the user has authorized these six assets, he needs to log in as soon as possible to revoke the authorization, otherwise the assets may be at risk. According to the official announcement on the 19th, because some users did not cancel the authorization in time, the stolen funds were about 445 WETH, worth about 1.43 million US dollars.",
    "avg_reported_damage_in_usd": 3000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 101,
    "incident_title": "20210529_BeltFinance_CSR",
    "incident_date": "2021-05-29",
    "incident_description": "Belt Finance on the Binance Smart Chain (BSC) suffered a lightning loan attack and lost US$6.2 million. The attacker used flash loans to obtain more than 6.2 million US dollars of funds from the Belt Finance agreement through 8 transactions, and has converted most of the funds into anyETH and withdrawn to Ethereum.  The attack happened with two vectors:  Ellipsis LP price manipulation and large deposits/withdrawals from other beltBUSD strategies.  \nThe attack originated from the attacker’s repeated buying and selling of BUSD, and the use of loopholes in the calculation of the balance of the bEllipsisBUSD strategy to manipulate the price of beltBUSD for profit. (peckshield)",
    "avg_reported_damage_in_usd": 6267376.5,
    "adversarial_contract": ""
  },
  {
    "incident_id": 102,
    "incident_title": "20210812_PineconeFinance_S",
    "incident_date": "2021-08-12",
    "incident_description": "On August 19, the vault of Pinecone Finance, a revenue aggregation project on the BSC, was hacked and lost approximately 3.5 million PCT tokens (market value of approximately US$200,000). The vulnerability of this attack is that the tokens used in the transfer process are depleted, and the contract does not handle this depletion properly, which leads to the vulnerability and the hacker attack.",
    "avg_reported_damage_in_usd": 200000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 103,
    "incident_title": "20210505_ValueDeFi_SR",
    "incident_date": "2021-05-05",
    "incident_description": "On May 5th 2021, 3:22 AM UTC, the exploiter re-initialized the pool and set the operator role to himself and _stakeToken to HACKEDMONEY.",
    "avg_reported_damage_in_usd": 10000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 104,
    "incident_title": "20210812_DAOMaker_CS",
    "incident_date": "2021-08-12",
    "incident_description": "The Neko Experimental Network of Maze Protocol was attacked at Aug-11–2021 09:39:24 PM +UTC. The attackers exploited a leak in the MainPool contract and borrowed funds directly to their own addresses. The parameter sent into the borrow method is onBehalfOf, which is the account who can borrow, while on the frontend, it is msg.sender that calls onBehalfOf in the borrow method. That leads to the severe vulnerability:If an evil account sends the onBehalfOf address to the user address that has collateral deposited in the Funding Pools with borrow credit remaining, the evil account is able to borrow funds under the name of the user. The consequence is debtToken mint to the onBehalfOf address, but fToken transferUnderlyingTo is towards the msg.sender.",
    "avg_reported_damage_in_usd": 7000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 105,
    "incident_title": "20210713_DeFiPie_S",
    "incident_date": "2021-07-13",
    "incident_description": "The attacker was able to withdraw almost all available liquidity from the protocol in ETH and BSC networks. Since the function doTransferOut is before the update of the account state, therefore, upon re-entry, the hacker was able to borrow for an amount exceeding the collateral.",
    "avg_reported_damage_in_usd": 0,
    "adversarial_contract": ""
  },
  {
    "incident_id": 106,
    "incident_title": "20210610_EvoDefi_S",
    "incident_date": "2021-06-10",
    "incident_description": "EvoDefi, the project revenue farm on the BSC chain, was attacked, and the price of its token GEN dropped from US2.1/piecetoUS0.9/piece, a short-term drop of 57%. Loss of 455,576.85 GEN worth approximately USD 1 million.",
    "avg_reported_damage_in_usd": 1000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 107,
    "incident_title": "20210714_ApeRocket_S",
    "incident_date": "2021-07-14",
    "incident_description": "At around 4:30 AM UTC on July 14, ApeRocket’s CAKE vault was exploited and drained $260K (883 BNB) out of the SPACE token LP on ApeSwap.",
    "avg_reported_damage_in_usd": 260000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 108,
    "incident_title": "20220127_Wegrocoin_S",
    "incident_date": "2022-01-27",
    "incident_description": "PeckShieldAlert tweeted that it detected a rug pull on the BSC project Wegrocoin (WEGRO). According to PeckShield, \"the deployer drained more than 1,000 BNB\", which is equivalent to about US$365,761 at current prices.",
    "avg_reported_damage_in_usd": 365761,
    "adversarial_contract": ""
  },
  {
    "incident_id": 109,
    "incident_title": "20200618_Bancor_S",
    "incident_date": "2020-06-18",
    "incident_description": "Due to the unverified safeTransferFrom () function in the new Bancor network contract, user funds are about to be depleted. The Bancor team stated: 1. A security vulnerability was discovered in the new Bancor Network v0.6 contract released two days ago; 2. After the vulnerability was discovered, the team conducted a white hat attack to transfer funds to a secure address; 3. The audit of the smart contract has been completed.But there are still $135,229 preemptively traded by two unknown arbitrage robots.",
    "avg_reported_damage_in_usd": 590578,
    "adversarial_contract": ""
  },
  {
    "incident_id": 110,
    "incident_title": "20210304_MeerkatFinance_CSR",
    "incident_date": "2021-03-04",
    "incident_description": "After just one day of operation, Meerkat Finance was rug pulled for 13 million BUSD and about 73,000 BNB, currently totalling around $31m.",
    "avg_reported_damage_in_usd": 31000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 111,
    "incident_title": "20220106_Stobox_S",
    "incident_date": "2022-01-06",
    "incident_description": "StoboxToken’s deployer address has been hacked, according to StoboxCompany. All reserve money has been stolen or liquidated because the deployer addresses of ETH and BSC are the same. Users are urged to halt purchasing and selling, and the STBU snapshot will be restored to the last transaction before the hack.",
    "avg_reported_damage_in_usd": 0,
    "adversarial_contract": ""
  },
  {
    "incident_id": 112,
    "incident_title": "20210929_Compound_CSR",
    "incident_date": "2021-09-29",
    "incident_description": "A community led (but professionally checked) proposal 62 contained a bug which allowed for the distribution of ~$80M in excess COMP rewards. Smart contracts are unforgiving of the tiniest errors...COMP bug is a tragic case of \">\" instead of \">=\" (in two code locations).",
    "avg_reported_damage_in_usd": 80000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 113,
    "incident_title": "20211110_Curve_S",
    "incident_date": "2021-11-10",
    "incident_description": "Mochi used bribes in their own token (MOCHI) to vote in a gauge receiving CRV\nMochi incentivised votes to its gauge via Convex until the factory pool reached $100m liquidity\nMochi minted a huge amount of tokens to themselves 108, Mochi has no minting cap or tokenomics\nDeposit those tokens onto the MOCHI which has a custom price oracle set by the Mochi team 69 (meaning the Mochi team could mint as many tokens as they wanted if there was enough liquidity to trade it for stables that aren’t backed by air) and 90% LTV and mint $46m USDM\nSwap those USDM to DAI on Curve 48\nUse those DAI to purchase Ethereum and ultimately buy 1.05m CVX 41\nAt that point, several people aware of the situation including Andre Cronje and myself tried to warn Mochi against locking those CVX as they would have been in a position to unfold their position and make LPs of that pool whole if the acquired CVX had remained liquid.\nMochi eventually locked the CVX 111",
    "avg_reported_damage_in_usd": 30000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 114,
    "incident_title": "20211029_AutoSharkFinance_S",
    "incident_date": "2021-10-29",
    "incident_description": "On Oct-29–2021 08:25:03 AM +UTC, an attacker manipulated the NOVA-BNB pool of ShibaNOVA by swapping back and forth many times. The balance of NOVA in that pool will get to near 0 after a swap of 50 times, which caused the price of NOVA in that pool to be sky-high.\nThe price of $JAWS was also artificially increased so that the attacker can get more back from the performance fee (artificial WBNB profit) that is automatically being used for adding liquidity.\nIn addition, the attacker also utilized the use of 5 NFTs to boost the $JAWS rewards in the pool.",
    "avg_reported_damage_in_usd": 200000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 115,
    "incident_title": "20210204_YearnFinance_CSR",
    "incident_date": "2021-02-04",
    "incident_description": "The vault was attacked using 9 flash loans. $11 million was lost from the vault, $2.7m of which went to the attacker, $3.5m went to Curve liquidity providers, $3.5m went to Curve stakers, and $1.4m was paid in Aave v2 fees.",
    "avg_reported_damage_in_usd": 35000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 116,
    "incident_title": "20210715_THORChain_CSR",
    "incident_date": "2021-07-15",
    "incident_description": "The bug is in the ETH Bifrost, and not the router.\nThe attacker wrapped the router with their own contract, which they called with a msg.value of 200, but their own contract called into the router with a call value of 0 and a deposit amount of 0.\nThe bifrost ultimately read the msg.value, with is 200, and not the final deposit amount, which was 0.",
    "avg_reported_damage_in_usd": 5000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 117,
    "incident_title": "20210315_CreamFinance_S",
    "incident_date": "2021-03-15",
    "incident_description": "Many DeFi protocol websites on BSC (Binance Smart Chain) were attacked by DNS, including Cream Finance and BSC header DEX PancakeSwap. The attacker requested users to submit personal private keys or mnemonics through the website. The relevant project team has passed Twitter Remind users not to visit the website and do not submit information such as private keys. Later PancakeSwap and Cream Finance both stated that they had regained access to DNS.",
    "avg_reported_damage_in_usd": 0,
    "adversarial_contract": ""
  },
  {
    "incident_id": 118,
    "incident_title": "20220430_FeiProtocol_CSR",
    "incident_date": "2022-04-30",
    "incident_description": "This attack was due to a design flaw in the FeiProtocl that failed to follow the check-effect-interaction pattern and thus allow the attacker to make a reentrant call before the borrow records are updated. The attacker is able to make a reentrant call in the “fallback()” function to exitMarket()",
    "avg_reported_damage_in_usd": 80000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 119,
    "incident_title": "20210803_PopsicleFinance_CSR",
    "incident_date": "2021-08-03",
    "incident_description": "Hacker executed a transaction that managed to drain 85% of the Sorbetto Fragola (UniswapV3 Optimizer) pools. The Popsicle Finance attacker exploited this vulnerability to trick the Sorbetto Fragola liquidity pool into believing that the fees owed to them were equal to the total TVL of the entire pool.  As a result, they were able to extract all of the $20.7 million in tokens currently in the pool.",
    "avg_reported_damage_in_usd": 20700000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 120,
    "incident_title": "20200628_Balancer_CS",
    "incident_date": "2020-06-28",
    "incident_description": " Balancer was attacked by exploiting its flawed handling of ERC20 deflationary tokens. Technically, the main logic behind the incident is the incompatibility between Balancer and deflationary tokens, which is then misused by the attacker to create skewed STA/STONK pools states and make profits from that.",
    "avg_reported_damage_in_usd": 523616.52,
    "adversarial_contract": ""
  },
  {
    "incident_id": 121,
    "incident_title": "20210710_Anyswap_SR",
    "incident_date": "2021-07-10",
    "incident_description": "The root of the exploit lay in the prototype V3 Router’s use of ECDSA, the algorithm securing its MPC wallet by generating private keys.\n\nThe key here is that every k value calculated in the algorithm should be based on a different, random number for each signature. If two or more transactions contain a repeated k value, then the private key can be back-calculated.",
    "avg_reported_damage_in_usd": 7787360,
    "adversarial_contract": ""
  },
  {
    "incident_id": 122,
    "incident_title": "20210714_BondlyFinance_CSR",
    "incident_date": "2021-07-14",
    "incident_description": "Bondly Finance fell victim to an attack from a malicious actor (Attacker) leading to the transfer of 373,088,023 $BONDLY tokens from the Bondly Staking Rewards contract, 200,460,000 of which were used to mint zenBONDLY in a sophisticated attack on the MANTRA DAO ZENTEREST platform. The attacker gained access to a password account belonging to Brandon Smith, CEO of Bondly.  ",
    "avg_reported_damage_in_usd": 0,
    "adversarial_contract": ""
  },
  {
    "incident_id": 123,
    "incident_title": "20220114_FloatProtocol_S",
    "incident_date": "2022-01-14",
    "incident_description": "The attacker brought in >47 ETH via Tornado Cash and deployed an orchestrating contract. Through the contract they swapped 47 ETH -> 129,447 USDC -> 77.5k FLOAT. This brought the vast majority of FLOAT out of the pool and it dramatically increased the price within the FLOAT/USDC pool. The attacker then waited for 2-7 minutes for the time-weighted oracles to shift the price.At this point, they were then able to deposit FLOAT into Rari Fuse at a vastly increased rate and borrow other assets, before selling the FLOAT back into the Uniswap V3 pool to return the price. According to the postmortem, the orchestrating contract still contains 250k USDC and 5 FLOAT. ",
    "avg_reported_damage_in_usd": 1160000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 124,
    "incident_title": "20201201_CompounderFinance_CR",
    "incident_date": "2020-12-01",
    "incident_description": "Compounder.finance was rug pulled for over $12,000,000.",
    "avg_reported_damage_in_usd": 12000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 125,
    "incident_title": "20210312_TSD_S",
    "incident_date": "2021-03-12",
    "incident_description": "No security vulnerabilities were exploited in the TSD smart contract or dApps. Through an understanding of the DAO mechanism, the attacked continued to purchase TSD at a low price and leveraged the mechanism by which token holders could no longer vote on proposals after they unbonded their tokens. Taking into consideration the project owner has a very low proportion of voting rights, the attacker took control of the governance surrounding proposal No. 2 with absolute advantage, thereby ensuring that the malicious proposal was passed.",
    "avg_reported_damage_in_usd": 16600,
    "adversarial_contract": ""
  },
  {
    "incident_id": 126,
    "incident_title": "20210501_Spartan_CSR",
    "incident_date": "2021-05-01",
    "incident_description": "The attacker used multiple transactions to bypass slippage protections*** within the contract and was able to take advantage of a flawed liquidity share calculation in the smart contract code.  The calculation checked the current balance (which the attacker inflated) rather than the cached balance.  The difference between these two values is what allowed the attacker to extract extra tokens during each round of the attack.\nThe vulnerability stems from the fact that the liquidity share calculation calcLiquidityShare() is querying the current balance which can then be inflated for manipulation. A correct calculation needs to make use of cached balance in baseAmountPooled/tokenAmountPooled. (not using cache). @peckshield",
    "avg_reported_damage_in_usd": 30166666.666666668,
    "adversarial_contract": ""
  },
  {
    "incident_id": 127,
    "incident_title": "20210428_UraniumFinance_CSR",
    "incident_date": "2021-04-28",
    "incident_description": "$57,000,000 was taken due to a simple math bug introduced to the UraniumPair contracts which had been forked from the Uniswap v2 code.",
    "avg_reported_damage_in_usd": 57000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 128,
    "incident_title": "20210829_xToken_SR",
    "incident_date": "2021-08-29",
    "incident_description": "~$4.5 million stolen from their xSNX contract.Three months ago this team lost $24 million - in the same token, to the same attack technique. An erroneous require statement allowed the function to be publicly callable. require(sender==address(this) was used when xToken should have used require(msg.sender==soloMarginAddress)",
    "avg_reported_damage_in_usd": 4500000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 129,
    "incident_title": "20180710_Bancor_S",
    "incident_date": "2018-07-10",
    "incident_description": "The Bancor platform theft was related to the BancorConverter contract, and the attacker (hacker/mole) is very likely to get the private key of the 0x009bb5e9fcf28e5e601b7d0e9e821da6365d0a9c.",
    "avg_reported_damage_in_usd": 23500000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 130,
    "incident_title": "20210812_NekoNetwork_S",
    "incident_date": "2021-08-12",
    "incident_description": "The Neko Experimental Network of Maze Protocol was attacked at Aug-11–2021 09:39:24 PM +UTC. The attackers exploited a leak in the MainPool contract and borrowed funds directly to their own addresses.",
    "avg_reported_damage_in_usd": 4000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 131,
    "incident_title": "20201217_WarpFinance_CSR",
    "incident_date": "2020-12-17",
    "incident_description": "The root cause of this incident was the use of AMM-based oracle (Uniswap), which allowed the attacker to manipulate the price of UniswapV2 pair (WETH-DAI) LP token.",
    "avg_reported_damage_in_usd": 7800000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 132,
    "incident_title": "20211027_CreamFinance_CSR",
    "incident_date": "2021-10-27",
    "incident_description": "The hacker was able to take advantage of a pricing vulnerability by repeatedly lending and borrowing flash-loaned funds across two addresses.Next, after accumulating yUSDVault-collateralised crYUSD, the price of the underlying yUSDVault token was manipulated in order to effectively double the value of the collateral owned by the attacker.Finally, using the now overvalued collateral, the attacker drained CREAM’s lending vaults of as many assets as possible.",
    "avg_reported_damage_in_usd": 130000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 133,
    "incident_title": "20200804_Opyn_CS",
    "incident_date": "2020-08-04",
    "incident_description": "This hack was done by calling exercise() with more than two vaults with ETH as the underlying assets. Since the implementation treats the same batch of ETH received as multiple batches of ETH receptions, the hacker re-uses that batch of ETH to retrieve the collateral USDC and make profits.",
    "avg_reported_damage_in_usd": 371000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 134,
    "incident_title": "20210810_PolyNetwork_CSR",
    "incident_date": "2021-08-10",
    "incident_description": "Poly Network was attacked by anonymous white hat hacker or hackers, causing over $610 million in digital crypto assets at the price of that date to be transferred to hacker-controlled addresses. Eventually, all assets were returned to Poly Network over the next 15 days. This was the largest security incident in DeFi's history in terms of the mark-to-market value of stolen assets at the price of that date. \"The hackers exploited a \"\"vulnerability between contract calls\"\" \n\"\"Poly has a contract called the \"\"EthCrossChainManager\"\". It's a privileged contract that has the right to trigger messages from another chain. It's a standard thing for cross-chain projects.It has a function named verifyHeaderAndExecuteTx that anyone can call to execute a cross-chain transaction.It (1) verifies that the block header is correct by checking signatures (seems the other chain was a poa sidechain or) and then (2) checks that the transaction was included within that block with a Merkle proof. Here's the code.\nOne of the last things the function does is call executeCrossChainTx, which makes the call to the target contract. This is where the critical flaw sits. Poly checks that the target is a contract, but they forgot to prevent users from calling a very important target... the EthCrossChainData contract By sending this cross-chain message, the user could trick the EthCrossChainManager into calling the EthCrossChainData contract, passing the onlyOwner check. Now the user just had to craft the right data to be able to trigger the function that changes the public keys…\n\n\"\t\"The hackers exploited a \"\"vulnerability between contract calls\"\" \n\"\"Poly has a contract called the \"\"EthCrossChainManager\"\". It's a privileged contract that has the right to trigger messages from another chain. It's a standard thing for cross-chain projects.It has a function named verifyHeaderAndExecuteTx that anyone can call to execute a cross-chain transaction.It (1) verifies that the block header is correct by checking signatures (seems the other chain was a poa sidechain or) and then (2) checks that the transaction was included within that block with a Merkle proof. Here's the code.\nOne of the last things the function does is call executeCrossChainTx, which makes the call to the target contract. This is where the critical flaw sits. Poly checks that the target is a contract, but they forgot to prevent users from calling a very important target... the EthCrossChainData contract By sending this cross-chain message, the user could trick the EthCrossChainManager into calling the EthCrossChainData contract, passing the onlyOwner check. Now the user just had to craft the right data to be able to trigger the function that changes the public keys…\n\n\"",
    "avg_reported_damage_in_usd": 527972491,
    "adversarial_contract": ""
  },
  {
    "incident_id": 135,
    "incident_title": "20210526_MerlinLab_CSR",
    "incident_date": "2021-05-26",
    "incident_description": "Merlin Lab, (another fork of PancakeBunny), was attacked in a similar fashion to the Bunny and the Autoshark hack. Attack vector:  {LINK-BNB Vault}",
    "avg_reported_damage_in_usd": 680000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 136,
    "incident_title": "20210804_WaultFinance_S",
    "incident_date": "2021-08-04",
    "incident_description": "Hackers use flash loans to buy a large amount of WEX at low prices, then pledge USDT to WUSDMaster to raise the price of WEX, and finally sell them to make a profit. Obviously, when a large number of pledge transactions occur, the WEX in the trading pair will drop significantly, and its value will rise rapidly. At this time, hackers can make huge profits by selling WEX.",
    "avg_reported_damage_in_usd": 930000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 137,
    "incident_title": "20220425_PI-DAO_S",
    "incident_date": "2022-04-25",
    "incident_description": "The PI-DAO project was exploited by a flash loan attack, resulting in a loss of US$6,445",
    "avg_reported_damage_in_usd": 6445,
    "adversarial_contract": ""
  },
  {
    "incident_id": 138,
    "incident_title": "20211231_VesperFinance_S",
    "incident_date": "2021-12-31",
    "incident_description": "On December 31, the official report, Vesper Finance stated that the №23 lending pool Vesper Lend beta launched on the interest rate agreement Fuse was once again under attack. The attacker manipulated an oracle and exhausted approximately $1 million in the Beta test lending pool of DAI, ETH, WBTC, and USDC. ",
    "avg_reported_damage_in_usd": 1000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 139,
    "incident_title": "20200623_DMM_S",
    "incident_date": "2020-06-23",
    "incident_description": "DMM Twitter said that during $DMG public sale today, its telegram was unfortunately brigaded by malicious actors who impersonated the DMM Foundation with sole the intent of stealing funds. After digging through the on-chain transactions to find those affected, the official sent a total of $40k worth of DMG to those affected at an exchange rate of $0.40 per DMG, hoping to make sure everyone who lost funds were made whole.",
    "avg_reported_damage_in_usd": 40000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 140,
    "incident_title": "20210314_Roll_CSR",
    "incident_date": "2021-03-14",
    "incident_description": "The tokens were taken from a Roll hot wallet, which not only received social tokens from Roll’ multisig but was also sponsored by Roll multisig owners.",
    "avg_reported_damage_in_usd": 5700000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 141,
    "incident_title": "20200922_UniCat_S",
    "incident_date": "2020-09-22",
    "incident_description": "According to ZenGo researcher Alex Manuskin, at least one of its users lost more than $140,000 worth of Uniswap's UNI tokens even after they removed their funds from the protocol. Other users lost about $50,000 more.",
    "avg_reported_damage_in_usd": 190000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 142,
    "incident_title": "20211028_AnubisDAO_S",
    "incident_date": "2021-10-28",
    "incident_description": "Investors claim that the creators of a newly-launched dog coin project defrauded them out of a combined total of $60 million in ETH after the funds vanished from the project’s liquidity pool.",
    "avg_reported_damage_in_usd": 58300000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 143,
    "incident_title": "20200926_GemSwap_S",
    "incident_date": "2020-09-26",
    "incident_description": "On September 26, the SushiSwap imitation project named GemSwap was exposed and LP was taken away. The query found that the project posted a tweet at around 15:00 today and revealed that it was attacked by the developer of \"whatitdobb\". It is understood that the project completed the liquidity migration earlier today, but the developer who initiated the attack had The relevant permission was obtained and the tokens in the liquidity pool were able to be taken away. The specific losses caused by this attack are currently unclear.",
    "avg_reported_damage_in_usd": 1300000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 144,
    "incident_title": "20210520_PancakeBunny_CSR",
    "incident_date": "2021-05-20",
    "incident_description": "This incident was due to a bug in the protocol that uses the AMM-based oracle, i.e., PancakeSwap, to measure the price of specific PancakeSwap LPs (BNB-BUSDT/BNB-BUNNY).",
    "avg_reported_damage_in_usd": 45000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 145,
    "incident_title": "20210619_VisorFinance_S",
    "incident_date": "2021-06-19",
    "incident_description": "The attacker had obtained access to an account that managed some of the Hypervisor admin functions. The attacker was able to withdraw funds from deposits that were not yet placed into the LP positions. The withdraw amounted to 500k from a TVL of 3M. (possible inside job?: @mxwtnbuhh looks like VisorFinance deployer just emergency withdrew from their vaults and sent everything to tornado cash https://twitter.com/mxwtnb/status/1406236260495245312)",
    "avg_reported_damage_in_usd": 500000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 146,
    "incident_title": "20201030_EtherCrash_S",
    "incident_date": "2020-10-30",
    "incident_description": "the EtherCrash cold wallet that claimed to be \"the most mature and largest gambling game in Ethereum\" was stolen, with a loss of about 2.5 million U.S. dollars. for",
    "avg_reported_damage_in_usd": 2500000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 147,
    "incident_title": "20220411_MaxAPYFinance_S",
    "incident_date": "2022-04-11",
    "incident_description": "PeckShield has detected @MaxAPYFinance rugged. MaxAPY contract owner transfers ~ 1,042 BNB( 440k)",
    "avg_reported_damage_in_usd": 440000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 148,
    "incident_title": "20211126_VisorFinance_S",
    "incident_date": "2021-11-26",
    "incident_description": "The malicious contract carried out its attack in repeated operations of diminishing returns. https://etherscan.io/address/0x1a252684a15f07c97ec20b2d6bb380d7410058da\nWhile we cannot see the contract code, it is easy to understand that the attack vector relied on large swaps to manipulate the Uniswap V3 pool's current price. Given the steep gradient in the liquidity distribution of this pair, we see that it is an attractive candidate for price manipulation, as after an initial threshold where liquidity is highly concentrated, impacting the price requires a relatively small amount of assets.",
    "avg_reported_damage_in_usd": 975720,
    "adversarial_contract": ""
  },
  {
    "incident_id": 149,
    "incident_title": "20200920_SodaFinance_S",
    "incident_date": "2020-09-20",
    "incident_description": "Soda.Finance was hacked by malicious actors, who subsequently liquidated over 400 ETH (around $160,000) from the Soda loan pool.",
    "avg_reported_damage_in_usd": 160000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 150,
    "incident_title": "20210808_Zerogoki_S",
    "incident_date": "2021-08-08",
    "incident_description": "Zerogoki was attacked due to compromised price oracle. The attacker provides a price oracle signed by legitimate private keys, which contain crafted number of tokens to be swapped. However the reason why the attacker can construct a valid signature is unknown yet.",
    "avg_reported_damage_in_usd": 670000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 151,
    "incident_title": "20200915_Bantiample_S",
    "incident_date": "2020-09-15",
    "incident_description": "The Bantiample team, a project on the Binance Smart Chain, has cashed out 3000 BNB to run away.",
    "avg_reported_damage_in_usd": 83000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 152,
    "incident_title": "20190625_Synthetix_S",
    "incident_date": "2019-06-25",
    "incident_description": "Synthetix founder Kain Warwick announced that an error that netted one legitimate user over $1 billion in profit has been fixed and that the user rolled back all the transactions in exchange for a bug bounty.",
    "avg_reported_damage_in_usd": 1000000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 153,
    "incident_title": "20211001_AutoSharkFinance_S",
    "incident_date": "2021-10-01",
    "incident_description": "On Friday Autoshark was the subject of an attempted flash loan exploit. The exploit was of debatable efficiency however, with the attacker collecting $580,000 after paying close to $1 million in transaction fees. ",
    "avg_reported_damage_in_usd": 580000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 154,
    "incident_title": "20200111_Fulcrum_C",
    "incident_date": "2020-01-11",
    "incident_description": "1Inch team said that \"All started on January 11, 2020, when Fulcrum team released their own Flash Loans feature on the Ethereum Mainnet, and we happened to find a very critical vulnerability in it. We discovered that $2.5M of user funds from 3 pools could be stolen within a single transaction. We prepared our own smart contract to perform a white-hat hack to protect user funds. Since the vulnerable smart contract was published less than 48h before we discovered the issue, there was a very high chance malicious attackers could exploit it, and we wanted to assure that this wouldn’t happen.\"",
    "avg_reported_damage_in_usd": 0,
    "adversarial_contract": ""
  },
  {
    "incident_id": 155,
    "incident_title": "20211130_MonoX_CSR",
    "incident_date": "2021-11-30",
    "incident_description": "Over $31 million stolen, across two chains, via a price manipulation of the project’s native token, MONO.\nTwo attacks hit the protocol in swift succession.First, ~$19.4M was stolen on Polygon and just 17 minutes later, the same attack vector was used on Ethereum, taking a further ~$12M.\nFirst, we wanted to give you a quick breakdown of the addresses that have lost funds and each of these wallets are on top of mind to make right. 406 ETH and 15,523 Polygon addresses have been affected by the hack, and of these addresses, 42 ETH and 2,653 Polygon have been actively LPing in more than just 1 pool.",
    "avg_reported_damage_in_usd": 31133333.333333332,
    "adversarial_contract": ""
  },
  {
    "incident_id": 156,
    "incident_title": "20220328_BNBDEFI_S",
    "incident_date": "2022-03-28",
    "incident_description": "A Rug Pull occurred in BNB DEFI, and the DEFI token fell by 68% in a short time. At present, the project has closed the community, and DEFI tokens have been exchanged for about 255 BNB.",
    "avg_reported_damage_in_usd": 96837.75,
    "adversarial_contract": ""
  },
  {
    "incident_id": 157,
    "incident_title": "20211211_AscendEX_SR",
    "incident_date": "2021-12-11",
    "incident_description": "On Sunday, AscendEX announced via Twitter that it had identified a number of unauthorized transactions from one of its hot wallets on Saturday. Assets not affected have been transferred to cold wallets while the investigation is carried out, the exchange added.",
    "avg_reported_damage_in_usd": 69200000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 158,
    "incident_title": "20220118_Crosswise_S",
    "incident_date": "2022-01-18",
    "incident_description": "The main reason for this attack is that the project side used the wrong method to get ‘msgSender’ so that the contract Owner rights change could be bypassed. \nThe Crosswisefi project does not adopt openZepplin standard writing method for the ‘_msgSender()’ function of MasterChef, and there are loopholes. This allows an attacker to circumvent the onlyOwner restriction by constructing a malicious’ calldata ‘implementation.",
    "avg_reported_damage_in_usd": 879000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 159,
    "incident_title": "20210517_FinNexus_S",
    "incident_date": "2021-05-17",
    "incident_description": "The owner authority of the contract has been modified.",
    "avg_reported_damage_in_usd": 7600000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 160,
    "incident_title": "20201008_DeFiSaver_S",
    "incident_date": "2020-10-08",
    "incident_description": "The key to this vulnerability is that an attacker can use the takeOrder function to call any function of the target contract _addresses[0] arbitrarily, and the parameters passed into the takeOrder function are user-controllable, and there are no checks or restrictions on the parameters. Therefore, in order to avoid such problems, it is recommended that the project party use a whitelist strategy to check the parameters such as _callData passed in by the user.",
    "avg_reported_damage_in_usd": 310000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 161,
    "incident_title": "20210915_Nowswap_S",
    "incident_date": "2021-09-15",
    "incident_description": "On September 15, 2021, the NowSwap DEX was the victim of a hack.  The attacker exploited a vulnerability in the protocol’s code that enabled them to extract $1 million in tokens from the project. The Uranium Finance and NowSwap hacks were made possible by an error when updating the smart contract’s code.  The original code of the contract contained a value, K, of 1,000 in three different places.  The update to the code changed this value in two places but not the third.",
    "avg_reported_damage_in_usd": 1000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 162,
    "incident_title": "20211014_IndexedFinance_CSR",
    "incident_date": "2021-10-14",
    "incident_description": "In order to control slippage, the rate at which the resulting changes in weights are enacted within the pool is limited, creating a temporary discrepancy ripe for manipulation.The attacker was able to take advantage of the above by using flash loans of the other assets in the pool to buy out UNI, decreasing the extrapolated value due to the delay in updating UNI’s weight decrease.",
    "avg_reported_damage_in_usd": 16000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 163,
    "incident_title": "20210318_SILFinance_S",
    "incident_date": "2021-03-18",
    "incident_description": "SIL.FINANCE has experienced usage issues during launch at UTC 16:00, March 18, 2021, “deposit/withdraw” function had been suspended after the team discovered the situation and immediately paused the SIL Master Contract using 4/6 Multi-Sign dev wallet.",
    "avg_reported_damage_in_usd": 12151258.16,
    "adversarial_contract": ""
  },
  {
    "incident_id": 164,
    "incident_title": "20220417_Beanstalk_SCR",
    "incident_date": "2022-04-17",
    "incident_description": "The attacker borrowed close to $1 billion in cryptocurrency assets through a service called Aave, exchanged them for a 67 percent share in the Beanstalk project, voted through their own proposal to withdraw the entire treasury, and returned the borrowed funds — all in less than 13 seconds.\nThe entire attack was based on a vulnerability that enabled the attacker to exploit the protocol’s majority vote governance system. To put it simply, any individual with a 2/3rd share (a supermajority) of the vote can pass a BIP at any time.\nNormally, the execution of a BIP on-chain requires a minimum of 7 days but leveraging the emergencyCommit function helped the attacker bypass this (a 2/3rd share was necessary for execution)",
    "avg_reported_damage_in_usd": 181500000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 165,
    "incident_title": "20200811_NUGS_S",
    "incident_date": "2020-08-11",
    "incident_description": "Two small-scale token projects, NUGS and NEXE, appeared to have committed \"travel fraud\" shortly after being launched on Uniswap. The NUGS project blamed this move on a \"smart contract vulnerability\". On its official telegram channel, NUGS stated that its smart contract is now \"unfixable.\" Another project, NEXE, is also suspected to have gone, and the social media account of this project has been deleted.",
    "avg_reported_damage_in_usd": 0,
    "adversarial_contract": ""
  },
  {
    "incident_id": 166,
    "incident_title": "2020117_OriginDollar_CSR",
    "incident_date": "2020-11-7",
    "incident_description": "The origin protocol was attacked by exploiting its flawed handling of the mint logic in its VaultCore smart contract.This incident was due to a bug in the protocol  (1) without validating the transferred-in assets and (2) without enforcing reentrancy protection on the mint logic. The exploitation leads to a greatly inflated totalSupply of the rebasing token, i.e., OUSD. The attacker then makes use of the inflation to redeem and drain about $7.7M of assets from the OUSD vault. This hack is initialized from a malicious ERC20-like contract (located at 0x47c3). This malicious contract implements a hook that will be invoked whenever the transferFrom() (function signature: 0x23b872dd) is being called.",
    "avg_reported_damage_in_usd": 7700000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 167,
    "incident_title": "20220205_Meterio_CSR",
    "incident_date": "2022-02-05",
    "incident_description": "The attack started at ~6am PST on February 5th, when the attacker maliciously minted a substantial amount of BNB and wETH tokens, draining the bridge reserve of its BNB and wETH before all bridge transactions could be halted by Meter.The hacker was able to exploit a vulnerability in the deposit function, which allowed them to fake BNB or ETH transfers. Meter.io announced that Meter Passport (a cross-chain bridge extension) automatically wraps and unwraps Gas Tokens (such as ETH and BNB) for user convenience. However, the contract did not prohibit the wrapped ERC20 Token from interacting directly with the native Gas Token, nor did it properly transfer and verify the correct amount of WETH transferred from the caller address.",
    "avg_reported_damage_in_usd": 4300000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 168,
    "incident_title": "20210213_CreamFinance_CSR",
    "incident_date": "2021-02-13",
    "incident_description": "The attackers' contract made the Homora code “believe” that their malicious contract was one of their own in order to manipulate internal debt numbers in their system.An attacker exploited Alpha Homora V2 using a series of complex transactions, which involved flashloans. ",
    "avg_reported_damage_in_usd": 37837648,
    "adversarial_contract": ""
  },
  {
    "incident_id": 169,
    "incident_title": "20220217_RigoBlock_S",
    "incident_date": "2022-02-17",
    "incident_description": "RigoBlock has been hacked. All tokens in Dragos but ETH and USDT are at risk due to an exploited protocol vulnerability.",
    "avg_reported_damage_in_usd": 463515,
    "adversarial_contract": ""
  },
  {
    "incident_id": 170,
    "incident_title": "20201214_NexusMutual_S",
    "incident_date": "2020-12-14",
    "incident_description": "Targeted attack towards the account of Mr. Hugh Karp.",
    "avg_reported_damage_in_usd": 8000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 171,
    "incident_title": "20210308_DODO_CSR",
    "incident_date": "2021-03-08",
    "incident_description": "DODO was hacked for $2 million using a fake token attack. The exploits targeted several DODO V2 Crowdpools, namely the WSZO, WCRES, ETHA, and FUSI pool.In summary, there are two individuals involved in this exploit. We will refer to them as Individual A and Individual B.Individual B has all the hallmarks of a frontrunning bot.",
    "avg_reported_damage_in_usd": 3800000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 172,
    "incident_title": "20211105_bzx_S",
    "incident_date": "2021-11-05",
    "incident_description": "The ethereum deployment of bZx protocol is safe following the compromise of an individual bZx developer’s computer and their private keys.\nThis attack granted the hacker access to the content of the bZx Developers wallet, and also the private keys to the BSC and Polygon deployment of bZx Protocol. After gaining control of BSC and Polygon the hacker drained the BSC and Polygon protocol, then upgraded the contract to allow draining of all tokens that the contracts had given unlimited approval.\nWhat Went Wrong?The BSC and Polygon implementation administrative private keys have not yet been transferred to the DAO yet. Therefore the BSC and Polygon Deployment did not have the protection of the DAO. When the developers private keys were compromised in a phishing attack the hacker gained access to not only the individual developers personal funds, but also gained access to the bZx deployment on BSC and Polygon. From there the hacker was able to upgrade the contract and perform an attack on users of the protocol and funds held within the protocol.\n[unlimited approve funds attack]\"",
    "avg_reported_damage_in_usd": 0,
    "adversarial_contract": ""
  },
  {
    "incident_id": 173,
    "incident_title": "20211023_AlphaFinance_S",
    "incident_date": "2021-10-23",
    "incident_description": "The implicit assumptions on Uniswap V2 resulted in 20 addresses on Alpha Homora V2 being impacted and lost a total of 40.93 ETH to miners who extracted this value.",
    "avg_reported_damage_in_usd": 0,
    "adversarial_contract": ""
  },
  {
    "incident_id": 174,
    "incident_title": "20210914_KlondikeFinance_S",
    "incident_date": "2021-09-14",
    "incident_description": "Klondike Finance was attacked by hackers, with a total loss of approximately 35,281.71 KXUSD (6.5629 WETH).",
    "avg_reported_damage_in_usd": 22116.8,
    "adversarial_contract": ""
  },
  {
    "incident_id": 175,
    "incident_title": "20210512_XToken_CSR",
    "incident_date": "2021-05-12",
    "incident_description": "~$4.5 million stolen from their xSNX contract.Three months ago this team lost $24 million - in the same token, to the same attack technique. An erroneous require statement allowed the function to be publicly callable. require(sender==address(this) was used when xToken should have used require(msg.sender==soloMarginAddress)",
    "avg_reported_damage_in_usd": 4500000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 176,
    "incident_title": "20200824_YFValue_S",
    "incident_date": "2020-08-24",
    "incident_description": "The team identified an exploit for the YFV staking pool that enables malicious actors to individually reset timers for staked YFV.  There is a risk of being locked in $170 million in funds.",
    "avg_reported_damage_in_usd": 0,
    "adversarial_contract": ""
  },
  {
    "incident_id": 177,
    "incident_title": "20210527_BurgerSwap_S",
    "incident_date": "2021-05-27",
    "incident_description": "Overall, the attacker reportedly managed to steal 4,400 BNB (worth around $1.6 million), 22,000 BUSD and 1.4 million USDT stablecoins, 2.5 Ethereum ($6,800), 432,000 BURGER ($3.2 million), and 142,000 xBURGER ($1 million)—for a total of over $7.2 million. Missing sanity check on K: The swap function is supposed to ***verify x*y >= k*** which basically verifies that the contract got enough input tokens required to do the swap. Without this check, you can trigger a swap to swap a million token X for a million token Y but only pay 1 token X to the pool while withdrawing the million token Y. Without this check, the pool has no way to ensure that the user paid the input tokens they committed in the swap.(@Mudit__Gupta)",
    "avg_reported_damage_in_usd": 7100000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 178,
    "incident_title": "20211121_Formation",
    "incident_date": "2021-11-21",
    "incident_description": "The main reason for this incident is that the project party underestimated the impact of fee on totalTokens when designing the function swapIn, and ignored the impact of decimal point accuracy between different tokens.",
    "avg_reported_damage_in_usd": 100000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 179,
    "incident_title": "20201112_Akropolis_S",
    "incident_date": "2020-11-12",
    "incident_description": "Akropolis was attacked by exploiting its flawed handling of the deposit logic in its SavingsModule smart contract***.This incident was due to a bug in the protocol without (1) validating the supported tokens and (2) enforcing reentrancy protection on the deposit logic. The exploitation leads to a large number of pooltokens minted without being backed by valuable assets. The redemption of these minted pooltokens is then exercised to drain about 2.0mn DAI from the affected YCurve and sUSD pools.This hack is initialized from a malicious ERC20-like contract (located at 0xe230). This malicious contract implements a hook that will be invoked whenever the transferFrom() (function signature: 0x23b872dd) is being called.",
    "avg_reported_damage_in_usd": 2030841,
    "adversarial_contract": ""
  },
  {
    "incident_id": 180,
    "incident_title": "20211230_SashimiSwap_S",
    "incident_date": "2021-12-30",
    "incident_description": "On December 30, BEOSIN’s Eagle Eye alerted that the Sashimi Swap was hacked at 09:06 UTC on December 30, with a total loss of nearly USD 200,000. \nThe hacker then removed the liquidity and gets WETH, and finally the hacker repeated the profit twice with the obtained WETH, and returned WETH tokens lent by flash loan. The total profits nearly $200,000: 6,261.304 uni, 4,466,096 Sashimi and 63,762 usdt.",
    "avg_reported_damage_in_usd": 200000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 181,
    "incident_title": "20210830_CreamFinance_CSR",
    "incident_date": "2021-08-30",
    "incident_description": "At approximately 12pm on 31st August (UTC +8), C.R.E.A.M. Finance was exploited for 462,079,976 in AMP tokens and 2,804.96 ETH tokens.There was a main exploit along with a smaller copy-cat. The copy-cat exploit address has withdrawal history from Binance. We are working with Binance to identify the second perpetrator. We will forward all relevant information to law enforcement authorities and prosecute to the fullest extent of the law. The AMP token contract implements ERC777, which has the _callPostTransferHooks hook that triggers tokensReceived() function that was implemented by the recipient. The reentrancy opportunity related to ERC-777-style transfer hooks allowed the exploiter to nest a second borrow() function inside the token transfer() before the initial borrow() was updated. This was used over 17 transactions",
    "avg_reported_damage_in_usd": 18800000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 182,
    "incident_title": "20220411_MarvinInu_S",
    "incident_date": "2022-04-11",
    "incident_description": "Marvin Inu’s cross-chain bridge was hacked, and tokens worth 110 ETH were stolen and sold, causing a sharp drop in price. The project party has closed the cross-chain bridge and fixed the loopholes. At the same time, it has adjusted the purchase tax to 0%, and promised to repurchase and destroy the tokens to make up for this loss after the price fluctuations stabilize.",
    "avg_reported_damage_in_usd": 350000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 183,
    "incident_title": "20211228_DEXTools_S",
    "incident_date": "2021-12-28",
    "incident_description": "A fake MetaMask token project has scammed traders out of $1.8 million worth of ETH.\nThe scammers hacked the DEXTools app's front end to convince users that their fake token was legitimate.\nThe fake MetaMask token is the third major scam to hit the crypto space over the holiday season.",
    "avg_reported_damage_in_usd": 1790000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 184,
    "incident_title": "20200630_VETH_S",
    "incident_date": "2020-06-30",
    "incident_description": "The hacker stole 919,299 VETH (worth $900,000) using only 0.9ETH. After the attack, VETH officially stated that the contract was used by the UX improvement it placed in transferForm(), which was their fault",
    "avg_reported_damage_in_usd": 900000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 185,
    "incident_title": "20220107_DaoMetaland_S",
    "incident_date": "2022-01-07",
    "incident_description": "#RugPull PeckShield has detected that @DaoMetaland rugged, more than 640 WBNB!",
    "avg_reported_damage_in_usd": 286748,
    "adversarial_contract": ""
  },
  {
    "incident_id": 186,
    "incident_title": "20210720_SanshuInu_S",
    "incident_date": "2021-07-20",
    "incident_description": "Using the mechanism of deflation token KEANU to attack the reward vulnerabilities in the Memestake contract deployed by Sanshu Inu, the attacker finally made a profit of about 56 ETH. The attacker leverages the deflation mechanism of the ERC20 token to manipulate the reward calculation of the Memstake smart contract.",
    "avg_reported_damage_in_usd": 100000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 187,
    "incident_title": "20220110_CityDAO_S",
    "incident_date": "2022-01-10",
    "incident_description": "After compromising an administrator’s accounts, the attacker set up an announcement about a fake “land drop” that pointed users to a phishing site.  Using Discord webhooks, the attacker was able to ensure that the announcement would immediately pop up for each user as they logged into the Discord server.\nOn the phishing site, the users connected their wallets to receive the land drop.  This allowed the attacker to create fraudulent transactions that the users approved which sent assets to the attacker.  In total, about $95,000 in cryptocurrency was stolen in the attack.coindesk.",
    "avg_reported_damage_in_usd": 95000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 188,
    "incident_title": "20220210_BuildFinance_S",
    "incident_date": "2022-02-10",
    "incident_description": "As per the announcement, the attacker was able to successfully access the DAO treasury due to the structure of the Build DAO governance model; as it seems the attacker simply managed to corral enough governance tokens to grab power, and the DAO doesn’t seem to have put mechanisms in place to defend the treasury against such a power grab.\nOnce the attacker had the power, he minted 1,107,600 BUILD ($1.7 million) in three transactions and drained the majority of the funds in the liquidity pools on the Balancer and Uniswap DEXs. The attacker then took control of the Balancer pools via the governance contract and drained the remaining funds, including 130,000 METRIC tokens, and tried to sell these tokens wherever there was any liquidity, causing intense sell pressure on the assets.",
    "avg_reported_damage_in_usd": 470000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 189,
    "incident_title": "20220330_BasketDAO_S",
    "incident_date": "2022-03-30",
    "incident_description": "According to BasketDAOOrg's official Twitter, there is a vulnerability in BMIZapper, which caused users to lose about 1.2 million US dollars.\n\n",
    "avg_reported_damage_in_usd": 1200000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 190,
    "incident_title": "20211211_SorbetFinance_S",
    "incident_date": "2021-12-11",
    "incident_description": "The core functionality of the vulnerable smart contract was to enable users to enter G-UNI pools with only one token, rather than being required to provide an equal proportion of two from the get-go. This required the smart contract to conduct a swap on a DEX aggregator before depositing the funds in the pool. This swap was done on 1inch, which requires other smart contracts to pass certain addresses and calldata generated by the 1inch API to execute the right functions on the 1inch smart contract.\nEnabling the smart contract at risk to conduct arbitrary low-level calls that were intended to only execute swaps on 1inch made it possible for the potential exploit to occur. For any developer reading this, never enable a smart contract to take arbitrary addresses and call data arguments if a) everyone can call this function, b) you don’t do sufficient checks on what the addresses and calldata that were passed should be, and c) users provide this smart contract with approvals.",
    "avg_reported_damage_in_usd": 27000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 191,
    "incident_title": "20210718_ArrayFinance_S",
    "incident_date": "2021-07-18",
    "incident_description": "First, the attacker invoked the buy function of the Array Finance. The attacker gained 430 ARRAY tokens minted by the Array Finance using 45.91 WETH.\nThen the attacker invoked the joinPool function of a closed source contract (Array Collater - 0xa800cda5) five times. He/she deposited 676,410.58 DAI + 679,080.46 USDC + 901.82 WETH + 20 WBTC + 20 renBTC and gained 726.38 aBPT tokens minted by Array Collater.\nThe attacker invoked the sell function to burn 430 ARRAY tokens and got 77.17 aBPT tokens.\nAt last, the attacker invoked the exitPool function of the Array Collater. He/she burned 804.55 aBPT tokens obtained in previous two steps and obtained 748,271.55 DAI + 751,225.08 USDC + 997.62 WETH + 22.63 WBTC + 22.74 renBTC.\nFrom Figure 2, we can find the attacker gains profits in step 5 (Figure 2: Invoke the sell function). That's because the obtained 77.17 aBPT tokens are more valuable than the 49.9142 WETH deposited in step 3 (Figure 2: Invoke the buy function). In the following, we will analyze the code to understand why this attack can happen.",
    "avg_reported_damage_in_usd": 515000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 192,
    "incident_title": "20210127_refi",
    "incident_date": "2021-01-27",
    "incident_description": "Weibo user “CryptoBlanker” broke the news: the refi.finance project party directly used the reserved setBoardroom() function to change the Boardroom address to the address it deployed. Light BAS was taken away 2,600, worth 111 ETH (about 144,000 US dollars).",
    "avg_reported_damage_in_usd": 144000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 193,
    "incident_title": "20210703_DEXTools_S",
    "incident_date": "2021-07-03",
    "incident_description": "The DEX trading tool DEXTools (DEXT) tweeted that it was recently hacked and affected some DEXT holder",
    "avg_reported_damage_in_usd": 0,
    "adversarial_contract": ""
  },
  {
    "incident_id": 194,
    "incident_title": "20210131_PopcornSwap_S",
    "incident_date": "2021-01-31",
    "incident_description": "Another DeFi project popcornswap on Binance Smart Chain has gone. It is reported that some users said in the community that the project used cake's LP, the contract was open source but there was no audit, and the LP was run in less than two hours. Currently, there are more than 40,000 BNB in ​​the wallet and no action is taken.",
    "avg_reported_damage_in_usd": 2075000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 195,
    "incident_title": "20220415_RikkeiFinance_S",
    "incident_date": "2022-04-15",
    "incident_description": "The attacker (address: 0x803e0930357ba577dc414b552402f71656c093ab) found a vulnerability in the source code of the PriceOracle smart contract. By manipulating this vulnerability, the attacker could make unauthorized changes to contract addresses used by the PriceOracle.\nThe attacker deployed a fake ChainLink contract to return incorrect prices and then directed the PriceOracle to this fake contract. This action was completed on two instances involving two transactions in quick succession.",
    "avg_reported_damage_in_usd": 1100000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 196,
    "incident_title": "20211226_MetaSwap_S",
    "incident_date": "2021-12-26",
    "incident_description": "Blockchain security company PeckShield has alerted investors of a possible rug pull event after identifying a massive 46.99% price drop on MetaSwap’s MGAS token.",
    "avg_reported_damage_in_usd": 602000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 197,
    "incident_title": "20200929_Eminence_CSR",
    "incident_date": "2020-09-29",
    "incident_description": "Andre Cronje’s unreleased project Eminence has been hacked for $15 million",
    "avg_reported_damage_in_usd": 15000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 198,
    "incident_title": "20210221_PrimitiveFinance_S",
    "incident_date": "2021-02-21",
    "incident_description": "No user funds lost. A critical vulnerability was discovered in Primitive Finance smart contracts that would allow all funds to be stolen from Primitive Finance users according to their token allowances. There were 88 potential victims, most with infinite approvals for important tokens, such as WETH or DAI, and with overall holdings of well over $10M. $1.3M of these funds were vulnerable at the same time, the rest only when/if converted to WETH, DAI, or other approved tokens.",
    "avg_reported_damage_in_usd": 13000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 199,
    "incident_title": "20200914_Chainlink_S",
    "incident_date": "2020-09-14",
    "incident_description": "Nine Chainlink node operators were subjected to so-called \"spam attacks.\" The attackers obtained approximately 700 ETH (worth approximately $335,000 at the time) from their \"hot wallets\".",
    "avg_reported_damage_in_usd": 335000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 200,
    "incident_title": "20220501_RariFei_C",
    "incident_date": "2022-05-01",
    "incident_description": "Decentralized finance (DeFi) platforms Rari Capital and Fei Protocol suffered a more-than-$80 million hack early Saturday.\nThe hacker exploited a reentrancy vulnerability in Rari’s Fuse lending protocol, according to a tweet by smart contract analysis firm Block Sec.\nhttps://www.coindesk.com/business/2022/04/30/defi-lender-rari-capitalfei-loses-80m-in-hack/\n\nAttack method: Reentrancy Attack",
    "avg_reported_damage_in_usd": 80000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 201,
    "incident_title": "20220517_FEG_S",
    "incident_date": "2022-05-17",
    "incident_description": "The multi-chain DeFi protocol FEG was attacked again, and the flash loan attack suffered on the BNB chain lost about $1.3 million in assets. The subsequent flash loan attack on Ethereum caused a loss of about $590,000, with a total loss of about $1.9 million in assets. This attack is similar to yesterday's attack and is caused by a vulnerability in the \"swapToSwap()\" function. This function directly uses the \"path\" entered by the user as a trusted party without screening and validating the incoming parameters. Additionally, the function will allow an unverified \"path\" parameter (address) to use the current contract's assets. Therefore, by calling \"depositInternal()\" and \"swapToSwap()\", the attacker can obtain permission to use the assets of the current contract, thereby stealing the assets within the contract.\n\nhttps://twitter.com/CertiKAlert/status/1526357878503768070\nAttack method: Flash Loan Attack",
    "avg_reported_damage_in_usd": 1900000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 202,
    "incident_title": "20220607_EqualizerFi_S",
    "incident_date": "2022-06-07",
    "incident_description": "Equalizer Finance suffered flash loan attacks on four chains: Ethereum, BSC, Polygon and Optimism. The main reason for this attack is that the FlashLoanProvider contract of the Equalizer Finance protocol is not compatible with the Vault contract. According to officials, funds on Ethereum and BSC have been recovered, but funds on Optimism and Polygon remain unaccounted for.\nhttps://equalizer-finance.medium.com/exploit-report-78bfd6b36689\n\nAttack method: Compatibility Issue",
    "avg_reported_damage_in_usd": 50000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 203,
    "incident_title": "20220608_ApolloX_S",
    "incident_date": "2022-06-08",
    "incident_description": "The ApolloX project was attacked due to a flaw in the ApolloX signature system. The attacker used the signature system flaw to generate 255 signatures, with a total of 53,946,802 $APX extracted from the contract, worth about $1.6 million.\n\nhttps://twitter.com/ApolloX_com/status/1534810576198979586\n\nSignature system flaws",
    "avg_reported_damage_in_usd": 1600000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 204,
    "incident_title": "20220611_TreasureSwap_S",
    "incident_date": "2022-06-11",
    "incident_description": "The treasure swap project was attacked. The attacker only used 0.000000000000000001 WETH to exchange all the WETH tokens in the transaction pool. The reverse of the source code found that the swap function of the attacked contract lacked the K value check. At present, the attacker has completed the attack on the two contracts 0xe26e436084348edc0d5c7244903dd2cd2c560f88 and 0x96f6eb307dcb0225474adf7ed3af58d079a65ec9, and accumulated a profit of 3,945 BNB.\n\nK-value Verification Vulnerability\n",
    "avg_reported_damage_in_usd": 1370000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 205,
    "incident_title": "20220616_InverseFi_CS",
    "incident_date": "2022-06-16",
    "incident_description": "Inverse Finance was exploited for more than $1.2 million worth of cryptocurrency on Thursday morning, on-chain data appears to show.\nExploiters seemed to use a flash loan attack to trick the protocol and steal more than 53 bitcoin, worth $1.1 million, and 10,000 tether (USDT), a stablecoin backed on a 1-1 basis with U.S. dollars. The exploit comes just over two months after attackers stole $15 million worth of cryptocurrencies from Inverse Finance in a similar attack, as previously reported.\n\nhttps://www.panewslab.com/zh/articledetails/m20ffpy4.html\nhttps://www.coindesk.com/tech/2022/06/16/defi-protocol-inverse-finance-exploited-for-12m/\n\nFlash Loan Attack",
    "avg_reported_damage_in_usd": 1260000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 206,
    "incident_title": "20220620_SNOOD_S",
    "incident_date": "2022-06-20",
    "incident_description": "The SNOOD ERC-777 smart contract was attacked, causing the liquidity of the UniswapV2Pair token to be completely drained (104 ETH).\n\nhttps://ethereum.stackexchange.com/questions/130472/attack-on-erc-777-smart-contract-and-uniswapv2pair-resulting-in-104-eth-liquidit\n\nReentrancy Attack",
    "avg_reported_damage_in_usd": 2192840,
    "adversarial_contract": ""
  },
  {
    "incident_id": 207,
    "incident_title": "20220623_DeFiSaver_S",
    "incident_date": "2022-06-23",
    "incident_description": "One-stop asset management solution DeFiSaver tweeted that it experienced an attempted DNS attack and, according to its analysis, no users were affected. DeFi Saver said that what the DNS attack has in common with Convex Finance and Ribbon Finance is the domain name registration service Name cheap, reminding other projects to use it with caution.\n\n\nhttps://twitter.com/DeFiSaver/status/1540300787988979713\n\n\nDNS Attack",
    "avg_reported_damage_in_usd": "n/a",
    "adversarial_contract": ""
  },
  {
    "incident_id": 208,
    "incident_title": "20220624_RibbonFinance_S",
    "incident_date": "2022-06-24",
    "incident_description": "Ribbon Finance said in a tweet that the homepage of the URL suffered a DNS attack, causing 2 users to approve a malicious contract for vault deposits. At present, the team has solved the problem, and the funds in all contracts are in a safe state. After analyzing the data on the chain, SlowMist believes that it is the same attacker as Convex. At the same time, it is found that a user of Ribbon Finance lost 16.5 WBTC in the attack.\n\nhttps://m.jinse.com/writings/1754332.html\n\nDNS Attack",
    "avg_reported_damage_in_usd": 350322.39,
    "adversarial_contract": ""
  },
  {
    "incident_id": 209,
    "incident_title": "20220624_ConvexFinance_S",
    "incident_date": "2022-06-24",
    "incident_description": "ConvexFinance officially tweeted that a DNS attack caused users to approve malicious contracts on some interactions on the website, and the problem has been fixed.\n\nSame attack as Ribbon.",
    "avg_reported_damage_in_usd": 343888.2,
    "adversarial_contract": ""
  },
  {
    "incident_id": 210,
    "incident_title": "20220630_MAD_S",
    "incident_date": "2022-06-30",
    "incident_description": "$MAD was hacked, and the hacker transferred all $MAD in the contract by directly calling the transfer function of the contract holding the token, and finally made a profit of $556 BNB (worth about $115,681), which was then transferred to Tornado.Cash. The reason is that the sensitive function was not checked in the contract that holding tokens, resulting in anyone can directly call the 0x9763a894 function to transfer out the tokens held in the contract\n\nhttps://twitter.com/BeosinAlert/status/1542517440252624896\nAttack method: Contract Vulnerability",
    "avg_reported_damage_in_usd": 115681,
    "adversarial_contract": ""
  },
  {
    "incident_id": 211,
    "incident_title": "20220711_Uniswap_S",
    "incident_date": "2022-07-11",
    "incident_description": "More than 70,000 addresses connected to Uniswap were airdropped tokens that tricked users into approving transactions that would allow attackers to control their wallets. The airdrop links users to a phishing site that resembles the real Uniswap site. Users are tricked into signing contracts, and cryptocurrencies and NFTs are stolen from wallets. One of the wallets lost more than $6.5 million worth of ether and bitcoin, and the other lost about $1.68 million worth of cryptocurrency\nhttps://twitter.com/sniko_/status/1546535668247060481\nAttack method: Phishing attack",
    "avg_reported_damage_in_usd": 12900000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 212,
    "incident_title": "20220430_BabylonFi_S",
    "incident_date": "2022-04-30",
    "incident_description": " In April, attackers exploited a vulnerability to steal $80 million from Rari Capital, and the asset management project Babylon Finance, Rari's main lending pool, lost $3.4 million as a result. On Aug. 31, Babylon Finance founder Ramon Recuero published a blog post announcing that Babylon would be shutting down and pledging to distribute remaining project funds to holders.\n \n https://medium.com/babylon-finance/babylon-finance-is-shutting-down-b58abf1bc251\n \n Attack method: Affected by the Rari Capital vulnerability",
    "avg_reported_damage_in_usd": 3400000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 213,
    "incident_title": "20220710_BiFi_S",
    "incident_date": "2022-07-10",
    "incident_description": "BIFROST officially released a report saying that the BTC address registration server of the BiFi service was attacked. According to the analysis, the attack was limited to the BTC address registration server, and neither the smart contract nor the BiFi protocol detected the vulnerability. BiFi issues and uses an address for each user who deposits BTC. The deposit addresses are signed and delivered to the address issuing server and the addresses are reflected on BiFi only in the case when the signature is verified. In the attack, the server key of the address issuing server was exposed and the attacker was able to self-sign their own deposit address. Since the attacker could generate a valid signature on the deposit address, BiFi mistakenly recognized the attacker’s BTC transfer as a BTC deposit into BiFi. As a result, the attacker was able to borrow 1,852 ETH with fake deposit.\n\nhttps://bifrost.medium.com/post-mortem-bifi-btc-illegal-address-registration-c21ce3ba9fc8\n\nAttack method: Private Key Leakage",
    "avg_reported_damage_in_usd": 2163136,
    "adversarial_contract": ""
  },
  {
    "incident_id": 214,
    "incident_title": "20220716_Impermax_S",
    "incident_date": "2022-07-16",
    "incident_description": "An official incident report from Impermax Finance stated that a hacker was able to steal approximately 9M IMX from several wallets controlled by the team. The IMX was not sold immediately after the hackers stole the funds. So the official team decided to get a head start by dumping a lot of tokens on the market before the hackers did anything. The Impermax lending protocol is completely immune to this, as the attack is caused by stolen private keys, not a bug in the smart contract.\n\nhttps://impermax.medium.com/imx-incident-post-mortem-and-recovery-plan-aeecd4e457ce\n\nAttack method: Private Key Leakage",
    "avg_reported_damage_in_usd": 8324784,
    "adversarial_contract": ""
  },
  {
    "incident_id": 215,
    "incident_title": "20220802_Nomad_C",
    "incident_date": "2022-08-02",
    "incident_description": "The cross-chain token bridge Nomad was exploited Monday, with attackers draining the protocol of virtually all of its funds. The total value of cryptocurrency lost to the attack totaled near $200 million.\n\nhttps://twitter.com/samczsun/status/1554252024723546112?ref_src=twsrc%5Etfw%7Ctwcamp%5Etweetembed%7Ctwterm%5E1554252024723546112%7Ctwgr%5Eb0d98c02a833b0aa69f3fe625d3dfd6bba590366%7Ctwcon%5Es1_&ref_url=https%3A%2F%2Fwww.coindesk.com%2Ftech%2F2022%2F08%2F02%2Fnomad-bridge-drained-of-nearly-200-million-in-exploit%2F\n\n\nhttps://www.coindesk.com/tech/2022/08/02/nomad-bridge-drained-of-nearly-200-million-in-exploit/\n\nSmartcontract exploits",
    "avg_reported_damage_in_usd": 200000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 216,
    "incident_title": "20220809_CurveFi_S",
    "incident_date": "2022-08-09",
    "incident_description": "The Curve Finance frontend was attacked, prompting users to grant token approvals to malicious smart contracts. The attackers moved the stolen funds to FixedFloat and Tornado Cash, with at least 362 ETH (~$620,000) stolen. FixedFloat tweeted that they had frozen 112 stolen ETH (~$192,000).\n\nhttps://twitter.com/CurveFinance/status/1557107088962224132\n\nAttack method: Malicious Code Injection Attack",
    "avg_reported_damage_in_usd": 428000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 217,
    "incident_title": "20220902_KyberNetwork_CS",
    "incident_date": "2022-09-01",
    "incident_description": "Kyber, a multi-chain decentralized finance (DeFi) platform, discovered a vulnerability to its website code that allowed exploiters to run away with approximately $265,000.\nTwo “whale” addresses appeared to be impacted by the attack, according to Kyber, which plans to reimburse the losses. Kyber said it discovered the exploit, which let attackers insert a “false approval, allowing a hacker to transfer a user’s funds to his address,” on Sept. 1 and “neutralized” the threat within two hours\n\nhttps://cointelegraph.com/news/kyber-network-offers-bounty-following-265k-hack-of-decentralized-exchange\nhttps://www.coindesk.com/tech/2022/09/01/defi-platform-kyber-network-discloses-265k-exploit-vows-to-reimburse-all-funds/\n\nAttack method: Malicious Code Injection Attack",
    "avg_reported_damage_in_usd": 265000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 218,
    "incident_title": "20220908_NewFree_CS",
    "incident_date": "2022-09-08",
    "incident_description": "In September 2022, DeFi project New Free DAO was the victim of a flash loan attack. The attacker took advantage of weak reward calculation code to drain 4,481 WBNB worth approximately $1.25 million from the contract.\n\nhttps://halborn.com/explained-the-new-free-dao-hack-september-2022/,\nhttps://twitter.com/SlowMist_Team/status/1567854876633309186\n\nAttack Method: Flashloan",
    "avg_reported_damage_in_usd": 1025000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 219,
    "incident_title": "20220907_Gera_S",
    "incident_date": "2022-09-07",
    "incident_description": "The security of the GERA token was compromised due to private key leakage. Hackers transferred the ownership of the smart contract deployer of GERA tokens to another address 0x510E4d61663bE6a24D600AaF90F892dd8c8C61dC.\n\nhttps://twitter.com/GeraCoin/status/1567538962410995713\n\nAttack method: Private Key Leakage",
    "avg_reported_damage_in_usd": 1480000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 220,
    "incident_title": "20221006_BNBBridge_C",
    "incident_date": "2022-10-06",
    "incident_description": "Attack at BNB Chain Bridge with an clear attack vector or method.  \n\nhttps://cointelegraph.com/news/bnb-chain-confirms-bsc-halt-due-to-potential-exploit\n\nBSC\n",
    "avg_reported_damage_in_usd": 100000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 221,
    "incident_title": "20221009_XaveFi_S",
    "incident_date": "2022-10-09",
    "incident_description": "The Xave Finance project was hacked, resulting in a 1000x increase in RNBW issuance. The attack transaction is 0xc18ec2eb7d41638d9982281e766945d0428aaeda6211b4ccb6626ea7cff31f4a. The attacker first creates the attack contract 0xe167cdaac8718b90c03cf2cb75dc976e24ee86d3. The attack contract first calls the executeProposalWithIndex() function of the DaoModule contract 0x8f90 to execute the proposal. The content of the proposal is to call the mint() function to mint 100,000,000,000,000 RNBWs and transfer the ownership rights to the attacker. Finally, the hacker exchanged it for xRNBW, which was stored at the attacker's address (0x0f44f3489D17e42ab13A6beb76E57813081fc1E2).\n\nhttps://mobile.twitter.com/AnciliaInc/status/1578952542926491650\n\nAttack method: Contract Vulnerability",
    "avg_reported_damage_in_usd": 635,
    "adversarial_contract": ""
  },
  {
    "incident_id": 222,
    "incident_title": "20221011_TempleDao_CS",
    "incident_date": "2022-10-11",
    "incident_description": "The TempleDAO project was hacked, involving an amount of approximately $2.36 million. According to the analysis of the SlowMist security team, in this incident, because the migrateStake function did not check the oldStaking, the attacker could forge the oldStaking contract to add the balance arbitrarily.\n\nhttps://twitter.com/SlowMist_Team/status/1579848760766926848\n\nAttack method: Contract Vulnerability",
    "avg_reported_damage_in_usd": 2360000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 223,
    "incident_title": "20221012_ATK_S",
    "incident_date": "2022-10-12",
    "incident_description": "The Journey of Awakening (ATK) project suffered a flash loan attack. The attacker attacked the strategy contract of the ATK project (0x96bF2E6CC029363B57Ffa5984b943f825D333614) through a flash loan attack, and obtained a large amount of ATK tokens from the contract. The attackers have exchanged all of the obtained ATK tokens for approximately $120,000 in BSC-USD, and the stolen funds are currently being exchanged for BNB and all transferred to Tornado Cash.\n\nhttps://www.panewslab.com/zh/sqarticledetails/q1qgvsgc.html\n\nAttack method: Flash Loan Attack",
    "avg_reported_damage_in_usd": 120000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 224,
    "incident_title": "20221015_EarningFarm_S",
    "incident_date": "2022-10-15",
    "incident_description": "The EFLeverVault contract of Earning.Farm was attacked twice by flash loans. The first attack was intercepted by MEV bot, causing the contract to lose 480 ETH; the second hacker completed the attack, and the hacker made a profit of 268 ETH. After analysis, the vulnerability is caused by the contract’s flash loan callback function not verifying the flash loan initiator. The attacker can trigger the contract’s flash loan callback logic by itself: repay the Aave stETH debt in the contract and withdraw cash, and then exchange stETH for ETH. Then the attacker can call the withdraw function to withdraw the ETH balance in all contracts.\n\nhttps://twitter.com/SupremacyHQ/status/1581012823701786624\n\nAttack method: Flash Loan Attack",
    "avg_reported_damage_in_usd": 341665.16,
    "adversarial_contract": ""
  },
  {
    "incident_id": 225,
    "incident_title": "20221020_EthAlarm_S ",
    "incident_date": "2022-10-20",
    "incident_description": "According to Cointelegraph, a vulnerability in the Ethereum Alarm Clock service (Ethereum Alarm Clock) has been exploited, and the hacker has so far made about $260,000 in profit. According to the analysis, hackers managed to exploit a loophole in the scheduled transaction process to profit from the refund of gas fees for canceled transactions. According to Etherscan transaction history, the hackers have obtained 204 ETH, worth about $259,800. It is reported that the Ethereum alarm clock service is to allow users to schedule future transactions by pre-determining the recipient address, sending amount and transaction time.\n\nhttps://cointelegraph.com/news/ethereum-alarm-clock-exploit-leads-to-260k-in-stolen-gas-fees-so-far\n\nAttack method: Contract Vulnerability",
    "avg_reported_damage_in_usd": 260000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 226,
    "incident_title": "20221021_OlympusDAO_S",
    "incident_date": "2022-10-21",
    "incident_description": "The redeem() function in OlympusDAO’s BondFixedExpiryTeller contract resulted in a loss of approximately $292,000 due to inability to properly validate inputs. The OlympusDAO hacker has returned the stolen funds to the DAO.\n\nhttps://www.panewslab.com/zh/sqarticledetails/1i3txm4e.html\n\nAttack method: Contract Vulnerability",
    "avg_reported_damage_in_usd": 292000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 227,
    "incident_title": "20221027_TeamFi_S",
    "incident_date": "2022-10-27",
    "incident_description": "Team Finance tweeted that the protocol’s management funds were hacked during the migration from Uniswap v2 to v3, with an identified loss of approximately $14.5 million worth of tokens. On October 31, the Team Finance white hat hacker address has returned $13.4 million in digital assets, including 548.7 ETH ($860,000) to FEG, 765,000 DAI and 11.8 million TSUKA ($626,000) to Tsuka, about 5 million DAI and 74.6 trillion CAW (~$5.5 million) to CAW, 209 ETH ($328,000) to KNDX, smithbot.eth has returned 263 billion KNDX ($292,000) to KNDX.\n\nhttps://twitter.com/TeamFinance_/status/1585562380591063043\n\nAttack method: Contract Vulnerability",
    "avg_reported_damage_in_usd": 14500000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 228,
    "incident_title": "20221028_FriesDao_S",
    "incident_date": "2022-10-28",
    "incident_description": "FriesDAO was attacked and lost about $2.3 million. An attacker gained control of the FriesDAO protocol operator's wallet through the Profanity wallet generator vulnerability, which would force the use of the private key of the address generated by the tool. FriesDAO stated in the official Discord channel that the official developers are currently trying to negotiate with the attackers to negotiate a white hat bounty in exchange for the return of the stolen funds.\n\nhttps://twitter.com/friesdao/status/1585712229067915264\n\nAttack method: Profanity Vulnerability",
    "avg_reported_damage_in_usd": 2300000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 229,
    "incident_title": "20221110_brahTOPG_S",
    "incident_date": "2022-11-10",
    "incident_description": "According to the monitoring of the SlowMist security team, the brahTOPG project on the ETH chain was attacked, and the attacker made a profit of about $89,879. The main reason for this attack is that the Zapper contract strictly checks the data passed in by the user, which leads to the problem of arbitrary external calls. The attacker uses this arbitrary external call problem to steal the tokens of users who are still authorized to the contract.\n\nhttps://twitter.com/SlowMist_Team/status/1590685173477101570\n\nAttack method: Contract Vulnerability",
    "avg_reported_damage_in_usd": 90000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 230,
    "incident_title": "20221111_DFXFi_CS",
    "incident_date": "2022-11-11",
    "incident_description": "The DFX Finance project on the ETH chain was attacked, and the attackers made a profit of about $231,138. According to SlowMist analysis, the main reason for this attack is that the Curve contract flash loan function does not have re-entrancy protection, which causes the attack to re-enter the deposit function to transfer tokens to judge the balance of flash loan repayments. The account so that the attacker can successfully withdraw money to profit.\n\nhttps://www.theblock.co/post/185796/polychain-dfx-finance-hacked\nhttps://www.odaily.news/newsflash/304558\n\n\nAttack method: Reentrancy Attack",
    "avg_reported_damage_in_usd": 231138,
    "adversarial_contract": ""
  },
  {
    "incident_id": 231,
    "incident_title": "20221123_NumbersProtocol_S",
    "incident_date": "2022-11-23",
    "incident_description": "According to the intelligence of the SlowMist security team, the Numbers Protocol (NUM) token project on the ETH chain was attacked, and the attacker made a profit of about $13,836. The main reason for this attack is that the NUM token does not have a permit function and has a callback function, so a fake signature can be passed in to deceive the cross-chain bridge and cause the user's assets to be transferred out unexpectedly.",
    "avg_reported_damage_in_usd": 13836,
    "adversarial_contract": ""
  },
  {
    "incident_id": 232,
    "incident_title": "20220509_Fortress_S",
    "incident_date": "2022-05-09",
    "incident_description": "Fortress Protocol, a lending protocol on BNB Chain, was suspected of being attacked. Token FTS fell by 42% in a short time. Currently, 1,048 Ethereum and 400,000 DAI have been transferred to Tornado.cash.\n\nhttps://twitter.com/Fortressloans/status/1523495202115051520\n\nAttack method: Flash Loan Attack\n\nBSC",
    "avg_reported_damage_in_usd": 3050000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 233,
    "incident_title": "20220512_VenusProtocol_S",
    "incident_date": "2022-05-12",
    "incident_description": "Venus Protocol issued a statement saying that Chainlink’s suspension of LUNA price updates after extreme volatility in LUNA prices caused the price of LUNA on the Venus lending market to remain at $0.107, while the market price of LUNA had dropped to $0.01 at that time. After the price update was suspended, two addresses lent about $13.5 million in assets by staking 230 million LUNA (worth about $2.3 million at the time), resulting in a loss of about $11.2 million to the protocol. At present, the LUNA lending market has been suspended, and this loss will be made up by the risk fund.\n\nhttps://blog.venus.io/venus-protocol-official-statement-regarding-luna-6eb45c3cb058\n\nAttack method: Oracle Attack\n\nBSC",
    "avg_reported_damage_in_usd": 11200000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 234,
    "incident_title": "20220518_FeministMeta_S",
    "incident_date": "2022-05-18",
    "incident_description": "The Feminist Metaverse project on BNB Chain was attacked. The attackers have transferred 1838 BNB to Tornado.cash, about $540,000.\n\nhttps://twitter.com/FM_Token/status/1526945914061049856\n\nAttack method: Flash Loan attack\n\nBSC",
    "avg_reported_damage_in_usd": 540000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 235,
    "incident_title": "20220521_bDollar_S",
    "incident_date": "2022-05-21",
    "incident_description": "The first algorithmic stablecoin project on Binance Smart Chain, bDollar, suffered a price manipulation attack, and the attacker made a profit of 2,381 WBNB (worth about $730,000). This attack mainly exploits the design loophole of the claimAndReinvestFromPancakePool function in the DAO fund proxy contract CommunityFund when adding liquidity. It does not fully consider that after the price is maliciously raised, the project party will passively use the funds in its own contract when adding liquidity. The situation of high-level connection.\n\nhttps://hacked.slowmist.io/?c=BSC&page=7#:~:text=method%3A%20Price%20Manipulation-,View%20Reference%20Sources,-2022%2D05%2D18\n\nAttack Method: Price Manipulation\n\nBSC\n\n",
    "avg_reported_damage_in_usd": 730000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 236,
    "incident_title": "2022050_Novo_S",
    "incident_date": "2022-05-30",
    "incident_description": "DeFi project Novo is suspected of being atttacked  and hackers have transferred 280 BNB to Tornado.cash\n\nhttps://www.panewslab.com/zh/sqarticledetails/y3y02hxy.html\n\nAttack Method: Contract Vilnerability\n\nBSC\n",
    "avg_reported_damage_in_usd": 89600,
    "adversarial_contract": ""
  },
  {
    "incident_id": 237,
    "incident_title": "20220608_fomodao_S",
    "incident_date": "2022-06-04",
    "incident_description": "The fomo-dao project is suspected of being attacked, and the attacker has made a profit of $110,000, which has been transferred to Tornado.cash.\n\nhttps://www.defidaonews.com/article/6755292\n\nAttack method: Flash loan attack\n\nBSC\n",
    "avg_reported_damage_in_usd": 110000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 238,
    "incident_title": "20220608_GymNetwork_S",
    "incident_date": "2022-06-08",
    "incident_description": "GYM NETWORK Hacked, Lost $2.1M, Stolen Funds Moved to Tornado Cash. According to the official Twitter account, the attack was caused by an attack on the Claim & Pool function, which resulted in a significant price drop.\n\nhttps://twitter.com/GymNet_Official/status/1534452473754157056\n\nAttack method: Contract Vulnerability\n\nBSC\n",
    "avg_reported_damage_in_usd": 2100000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 239,
    "incident_title": "20220613_Fswap_S",
    "incident_date": "2022-06-13",
    "incident_description": "Fswap was attacked by a hacker on June 13. Fswap stated that the attack was a vulnerability incident of a non-attacked project and a malicious loan attack. Hackers borrowed money from BISWAP to FSWAP for transaction attacks. The hacker made about 1,751 WBNB worth about $500,000.\n\nhttps://twitter.com/fswap2021/status/1536413676688838663\n\nAttack method: Flash Loan Attack",
    "avg_reported_damage_in_usd": 500000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 240,
    "incident_title": "20220621_whaleswap_S",
    "incident_date": "2022-06-21",
    "incident_description": "The whaleswap.finance project was attacked, and at least 5946 BUSD and 5964 USDT were lost. The reason may be that there is a problem with the K value verification of the whaleswap.finance Pair contract. Whenever the user exchanges, there is a problem with the parameter magnitude passed in the K value verification, which causes the K value verification to fail. The attacker first borrows a BSC-USD through a flash loan, and then returns the flash loan when the K value verification parameter is on the order of 10000^4. The parameter verification level used in the K value verification is 10000^2, which causes the K verification to fail.",
    "avg_reported_damage_in_usd": 12000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 241,
    "incident_title": "20220622_PandorachainDao_S",
    "incident_date": "2022-06-22",
    "incident_description": "The pandorachainDAO project suffered a flash loan attack, resulting in a loss of assets worth about $128,000.\n\nhttps://gostake.io/resource/news/7a9960908de49041e5e863fbb0b20463.html\n\nAttack method: Flash Loan Attack\n\nBSC",
    "avg_reported_damage_in_usd": 128000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 242,
    "incident_title": "20220714_SpaceGodzilla_S",
    "incident_date": "2022-07-14",
    "incident_description": "SpaceGodzilla was attacked by price manipulation and lost approximately 25,000 USDT.\n\nhttps://twitter.com/BlockSecTeam/status/1547456591900749824\n\nAttack method: Price Manipulation\n\n\nBSC",
    "avg_reported_damage_in_usd": 25000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 243,
    "incident_title": "20220808_EGDFi_S",
    "incident_date": "2022-08-08",
    "incident_description": "According to SlowMist, the EGD Finance project on BSC was attacked by hackers, resulting in the unexpected withdrawal of funds from its pool. The SlowMist security team analyzed this and said that this incident was because the price-feeding mechanism for calculating rewards when EGD Finance's contracts obtained rewards was too simple, resulting in the token price being manipulated by flash loans for profit.\n\nhttps://www.panewslab.com/zh/articledetails/t3k6b3m6.html\n\nAttack method: Price Manipulation\n\nBSC\n",
    "avg_reported_damage_in_usd": 36000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 244,
    "incident_title": "20220824_Kaoyaswap_S",
    "incident_date": "2022-08-24",
    "incident_description": "Kaoyaswap on BSC appears to have been attacked, with hackers making 37,294 BUSD and 271.2 WBNB, caused by faulty logic in the Swap function.\n\nhttps://twitter.com/BlockSecTeam/status/1562286943957708800\n\nAttack method: Contract Vulnerability",
    "avg_reported_damage_in_usd": 118000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 245,
    "incident_title": "20220829_DDC_S",
    "incident_date": "2022-08-29",
    "incident_description": "DDC was exploited and lost $104,600. The cause of the event is the problem of arbitrarily deducting pool fees.\n\nhttps://twitter.com/BeosinAlert/status/1564240190851383302\n\nAttack method: Contract Vulnerability\n\nBSC\n",
    "avg_reported_damage_in_usd": 104600,
    "adversarial_contract": ""
  },
  {
    "incident_id": 246,
    "incident_title": "2022081_Cupid_S",
    "incident_date": "2022-08-31",
    "incident_description": "The attacker made a profit of $78,622 through a flash loan on BNB Chain, causing the token CUPID to plummet by more than 90%, and the token VENUS to rise by more than 300% and then fall back.\n\nhttps://twitter.com/BlockSecTeam/status/1564890919023034369\n\nAttack method: Flash Loan Attack\n\nBSC",
    "avg_reported_damage_in_usd": 78623,
    "adversarial_contract": ""
  },
  {
    "incident_id": 247,
    "incident_title": "20220902_SchadowFi_S",
    "incident_date": "2022-09-02",
    "incident_description": "Privacy project ShadowFi suffered a hack, and its official TokenSDF fell 98.5%. The attacker exploited the vulnerability of SDF to allow anyone to burn the Token, making a profit of about 1078 BNB (about $300,000), and the stolen funds have been transferred to TornadoCash.\n\nhttps://twitter.com/PeckShieldAlert/status/1565549688509861888\n\nAttack Method: Contract Vulnerability\n\nBSC",
    "avg_reported_damage_in_usd": 300000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 248,
    "incident_title": "20220905_DaoSwap_S",
    "incident_date": "2022-09-05",
    "incident_description": "On September 5th, DaoSwap lost 580,000 USDT in an attack that allowed users to set the inviter’s address as themselves due to mining rewards that were larger than the fees charged during the swap process and lack of verification.",
    "avg_reported_damage_in_usd": 580000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 249,
    "incident_title": "20221002_TransitSwap_S",
    "incident_date": "2022-10-02",
    "incident_description": "According to official news, Transit Swap, a cross-chain trading platform aggregator supported by TokenPocket, was hacked. According to the analysis of SlowMist MistTrack, the stolen assets exceeded 28.9 million US dollars. The hacker's account address is 0x75f2aba6a44580d7be2c4e42885d4a1917bffd46. The largest attacker had returned 6,500 BNB (about $1.95 million) on October 10, and on October 13, the attackers returned 3,485 BNB (about $950,000).\n\nhttps://slowmist.medium.com/cross-chain-dex-aggregator-transit-swap-hacked-analysis-74ba39c22020\n\nAttack method: Unchecked Input Data\n\nBSC\n\n",
    "avg_reported_damage_in_usd": 28900000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 250,
    "incident_title": "20221017_MTDAO_S",
    "incident_date": "2022-10-17",
    "incident_description": "The unopened contract 0xFaC064847aB0Bb7ac9F30a1397BebcEdD4879841 of the MTDAO project party was attacked by a flash loan, and the affected tokens were MT and ULM, with a total profit of 487,042.615 BUSD. The attacker used the functions 0xd672c6ce and 0x70d68294 in the unopened contract to call the sendtransfer function in the MT and ULM token contracts to profit (because they are both deployed by the project party, the unopened contract 0xFaC06484 has minter permission).\n\nhttps://www.panewslab.com/zh/sqarticledetails/spqk6wao.html\n\nAttack method: Flash Loan Attack\n\nBSC\n",
    "avg_reported_damage_in_usd": 487042,
    "adversarial_contract": ""
  },
  {
    "incident_id": 251,
    "incident_title": "20221018_PLTD_S",
    "incident_date": "2022-10-18",
    "incident_description": "The PLTD project was attacked by hackers, all BUSD in its trading pool was sold out, and the attackers gained a total of 24,497 BUSD. This attack mainly exploits the code loopholes in the PLTD contract, reduces the PLTD token balance in Cake-LP (0x4397c7) to 1 through a flash loan attack, and then uses the PLTD in hand to exchange all BUSD into the attack contract .\n\nhttps://www.panewslab.com/zh/sqarticledetails/p4ochu0v.html\n\nAttack method: Flash Loan Attack\n\nBSC",
    "avg_reported_damage_in_usd": 24497,
    "adversarial_contract": ""
  },
  {
    "incident_id": 252,
    "incident_title": "20221027_UvToken_S",
    "incident_date": "2022-10-27",
    "incident_description": "The UvTokenWallet Eco Staking mining pool contract was hacked. The key reason for the vulnerability is that the mining pool contract withdrawal function does not strictly judge the user input, so that the attacker can directly pass in the malicious contract address and use the malicious contract to empty the relevant funds. SlowMist MistTrack conducted a traceability analysis of the funds: so far, hackers have transferred a total of 5,011 BNB of profit to Tornado Cash. In addition, the source of the attack fee is also Tornado Cash.\n\nhttps://www.odaily.news/newsflash/303069\n\nAttack method: Contract Vulnerability\n\nBSC\n",
    "avg_reported_damage_in_usd": 1437355,
    "adversarial_contract": ""
  },
  {
    "incident_id": 253,
    "incident_title": "20221107_MooCakeCTX_S",
    "incident_date": "2022-11-07",
    "incident_description": "The MooCakeCTX project suffered a flash loan attack, and the attackers made a profit of $143,921. According to Fairyproof’s analysis, the suspected reason is that the contract reinvested (the earn function was not called) before the user pledged (depositAll function) without settlement of the reward, that is, when the user pledged, the contract did not settle the previous reward and conduct new investment. This will cause users to get the previous pledge dividends immediately after the pledge. After the attacker borrows 50,000 cake tokens using a flash loan in the same block, he pledges it twice in a row, and then withdraws the pledged cake tokens and returns them to make a profit.\n\nhttps://www.panewslab.com/zh/sqarticledetails/vb6aozpr.html\n\nAttack method: Flash Loan Attack\n\nBSC",
    "avg_reported_damage_in_usd": 143921,
    "adversarial_contract": ""
  },
  {
    "incident_id": 254,
    "incident_title": "20221116_SheepFarm_S",
    "incident_date": "2022-11-16",
    "incident_description": "The SheepFarm project on the BNB chain was attacked by a vulnerability. After analysis, it was found that because the register function of the SheepFarm contract could be called multiple times, the attacker 0x2131c67ed7b6aa01b7aa308c71991ef5baedd049 used the register function multiple times to increase his own gems, and then used the upgradeVillage function to accumulate yield while consuming gems properties, and finally call the sellVillage method to convert yield to money before withdrawing money. The attack caused the project to lose about 262 BNB, about $72,000.\n\nhttps://www.panewslab.com/zh/sqarticledetails/nmuct2g5.html\n\nAttack method: Contract Vulnerability\n\nBSC",
    "avg_reported_damage_in_usd": 72000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 255,
    "incident_title": "20221202_Helio_RS",
    "incident_date": "2022-12-02",
    "incident_description": "After the attack on Ankr’s aBNBc token, an address exchanged 10 BNB for 15.5 million BUSD with the help of the Ankr vulnerability, resulting in the emptying of the Hay liquidity pool. Another user made a profit through the same method, with an income of about $3.5 million. Helio Protocol tweeted that the BNB pledged by users is safe, and the official is in close communication with the Ankr team to discuss the restart plan of aBNBc.",
    "avg_reported_damage_in_usd": 19000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 256,
    "incident_title": "20221214_Nimbus_S",
    "incident_date": "2022-12-14",
    "incident_description": "The NimbusPlatform project on the BSC chain was attacked, and the attacker made a profit of about 278 BNB. According to the analysis of SlowMist, the main reason for this attack is that the calculation of rewards only depends on the number of tokens in the pool, which leads to being manipulated by flash loans, thereby obtaining more rewards than expected.\n\nhttps://twitter.com/SlowMist_Team/status/1602942551753101312\n\nAttack method: Contract Vulnerability\n\nBSC",
    "avg_reported_damage_in_usd": 74567,
    "adversarial_contract": ""
  },
  {
    "incident_id": 257,
    "incident_title": "20230112_LendHub_C",
    "incident_date": "2023-01-12",
    "incident_description": "According to a report issued by the team on Friday, DeFi digital asset lending firm LendHub has lost $6 million in digital assets on its network.\n\nhttps://crypto.news/lendhub-loses-6m-to-hackers/\n",
    "avg_reported_damage_in_usd": 6000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 258,
    "incident_title": "20230112_BonqDao_C",
    "incident_date": "2023-01-12",
    "incident_description": "An oracle hack allowed the exploiter to manipulate the price of the AllianceBlock token, leading to an estimated $120 million loss, according to Peckshield\n\nhttps://cointelegraph.com/news/bonqdao-protocol-suffers-120m-loss-after-oracle-hack\n\nETH",
    "avg_reported_damage_in_usd": 120000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 259,
    "incident_title": "20230203_OrionProtocol_SC",
    "incident_date": "2023-02-03",
    "incident_description": "Orion Protocol, an exchange aggregation platform, suffered a reentrancy attack and lost about $3 million in assets. The attackers have transferred some of the cryptocurrency to Tornado Cash. Orion Protocol CEO Alexey Koloskov tweeted that no users suffered any losses in the incident and all users’ funds are safe, including staking, Orion Pool, bridges, and liquidity providers. Assets at risk are held in in-house brokerage accounts run by the Orion team. This problem is not caused by a flaw in the core protocol code, but may be caused by a bug in a mix of third-party libraries in its experimental and smart contracts used by private brokers\n\nhttps://www.coindesk.com/business/2023/02/02/orion-protocol-loses-3m-of-crypto-in-trading-pool-exploit/\n\n\nAttack method: Reentrancy Attack\n\nBSC\n",
    "avg_reported_damage_in_usd": 3000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 260,
    "incident_title": "2020107_Mycelium_S",
    "incident_date": "2023-01-07",
    "incident_description": "Mycelium, a perpetual agreement, tweeted that due to the oracle feeding problem of the ETH-USD trading pair, MLP suffered a loss of 4~6% from robot arbitrage (the current pool size is about $6.6 million, and the estimated loss is about $300,000), but the team has fixed the loophole and resumed trading. The reason for this is that due to the fact that Binance began blocking US IPs in late December, one of Mycelium's three oracle data vendors went offline, and the other vendor also seemed to have gone wrong overnight, resulting in prices relying only on Coinbase and Bitfinex. Coinciding with about 4 pm yesterday, Bitfinex's ETH-USD feed price fluctuated significantly, and the spread was extremely large, perhaps the arbitrage robot detected the spread and began to arbitrage at a higher than usual amount, resulting in a loss of MLP.\n\nhttp://yjzljc.com/kuaixun/12696198.html\n\nAttack method: The oracle price problem\n\nBSC",
    "avg_reported_damage_in_usd": 300000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 261,
    "incident_title": "20230110_BRA_S",
    "incident_date": "2023-01-10",
    "incident_description": "The price of BRA token on BNB Chain is zero. According to the analysis, the token will be taxed during the transaction, and the tax collected will be directly sent to the transaction pair, and the tax will be added twice. Under this mechanism, after many such transactions, the number of tokens in the transaction pair continues to increase. At the same time, any user can call the skim function to retrieve the extra tokens in the transaction pair, which results in the actual number of tokens exceeding its issuance limit. This BRA token attack has caused 820 WBNB losses. The address of the attacker (0xE2Ba15be8C6Fb0d7C1F7bEA9106eb8232248FB8B).\n\nhttps://www.panewslab.com/zh/sqarticledetails/ql0656re.html\n\nAttack method: Taxation Mechanism Flaw\n\nBSC",
    "avg_reported_damage_in_usd": 227377.8,
    "adversarial_contract": ""
  },
  {
    "incident_id": 262,
    "incident_title": "20230112_RoeFinance_S",
    "incident_date": "2023-01-12",
    "incident_description": "RoeFinance was attacked. The victim pool (0x574f) has just been emptied, with a total loss of about $80000. This is a typical price manipulation attack.\n\nhttps://twitter.com/BlockSecTeam/status/1613267000913960976\n\nAttack method: Price Manipulation\n\nBSC",
    "avg_reported_damage_in_usd": 80000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 263,
    "incident_title": "20230117_OMNI_S",
    "incident_date": "2023-01-17",
    "incident_description": "The OMNI Real Estate Token (ORT) project on BSC was attacked. The cause of the attack is suspected to be a loophole in the contract code. The attacker’s address is: 0x9BbD94506398a1459F0Cd3B2638512627390255e, one of the attack contracts is 0x0eFfECA3dBCBcda4d5e4515829b0d42181700606, the initial gas source of the attack is FixedFloat, and the attacker made more than 236 BNB, worth about $57.\n\nhttps://www.panewslab.com/zh/sqarticledetails/t730u0t3.html\n\nAttack method: Contract Vulnerability\n\nBSC",
    "avg_reported_damage_in_usd": 70705,
    "adversarial_contract": ""
  },
  {
    "incident_id": 264,
    "incident_title": "20230119_ThoreumFi_S",
    "incident_date": "2023-01-19",
    "incident_description": "Thoreum Finance was hacked. According to analysis, because the transfer function of the non-open source contract 0x79fe created by the Thoreum Finance project party is suspected to have a loophole, when the from and to addresses of the transfer function are the same, due to the use of temporary variables to store the balance, the balance will double when you transfer to yourself , the attacker repeated the operation many times, and finally made a profit of 2,000 BNB, involving an amount of about 580,000 US dollars.\n\nhttps://www.panewslab.com/zh/sqarticledetails/chr92pfw.html\n\nAttack method: Contract Vulnerability\n\nBSC",
    "avg_reported_damage_in_usd": 580000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 265,
    "incident_title": "20230120_FFF_S",
    "incident_date": "2023-01-20",
    "incident_description": "It is reported that the FFF token deployed on the BSC has an abnormal additional issue event. This event is that the administrator of the original project party purchased the additional issue through the pre-set additional issue contract, and then sold the additional issued tokens and transferred the acquired assets in part. More than US $1.03 million of FFF tokens were sold in this issue.\n\nhttps://www.panewslab.com/zh/sqarticledetails/11pl2td6.html\n\nAttack method: Insider Manipulation\n\nBSC",
    "avg_reported_damage_in_usd": 1030000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 266,
    "incident_title": "20230130_BEVO_S",
    "incident_date": "2023-01-30",
    "incident_description": "The BEVO NFT Art Token (BEVO) on BSC was exploited with a total loss of approximately $45,000. The root cause is that BEVO is a deflationary token, and the attacker calls the function deliver(), the value of _rTotal will decrease, which will further affect the return value of getRate() used to calculate the balance. After the attacker manipulates the token balance, he calls the function skim to transfer the increased PancakePair balance to his own account. Finally, the attacker calls the function deliver() again and exchanges the increased BEVO back to WBNB.\n\nhttps://twitter.com/BlockSecTeam/status/1620030206571593731\n\nAttack method: Reward Mechanism Flaw\n\nBSC",
    "avg_reported_damage_in_usd": 45000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 268,
    "incident_title": "20230207_CowSwap_C",
    "incident_date": "2023-02-07",
    "incident_description": "Security firm PeckShield reported that the hacker successfully drained roughly 551 BNB off CoW Swap into Tornado Cash, which was worth around $181,600 at the time of writing\n\nhttps://cointelegraph.com/news/cow-swap-hacker-milks-over-550-bnb-using-solver-exploit\n\nAttack Method: Contract Vulnerability\n",
    "avg_reported_damage_in_usd": 181000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 269,
    "incident_title": "20230207_LianGoPay_S",
    "incident_date": "2023-02-07",
    "incident_description": "The LianGoPay project announced on February 7 that its assets in the LGTPool pledge contract on the BNB Chain were stolen, 6,148,859 LGT reward coins were stolen, and the loss was about 1.6 million US dollars. According to analysis, the reason for the theft was that the owner administrator of LGTPool created a fake LP token pledge pool (Pool No. 3), and then the thief put a large amount of LP tokens into the pool for pledge, and obtained 6.14 million pieces LGT reward token.\n\nAttack method: Leveraging fake LP staking pools\n\nhttps://www.panewslab.com/zh/sqarticledetails/tycwc1sv.html\n\nBSC",
    "avg_reported_damage_in_usd": 160000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 270,
    "incident_title": "20230210_SushiSwap_S",
    "incident_date": "2023-02-10",
    "incident_description": "SushiSwap's BentoBoxv1 contract was attacked, and the hacker made a profit of about $26,000. According to analysis, the attack is due to the Kashi Medium Risk ChainLink price update later than the mortgage/loan. In the two attack transactions, the attacker flashloaned 574,275 and 785,560 xSUSHI respectively. After mortgage and loan, the price of kmxSUSHI/USDT in LINK Oracle dropped by 16.9%. By exploiting this price gap, the attacker can call the liquidate() function to liquidate and obtain 15,429 and 11,333 USDT.\n\nAttack method: Price Manipulation\n\nhttps://www.panewslab.com/zh/sqarticledetails/dw2h404u.html\n",
    "avg_reported_damage_in_usd": 26000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 271,
    "incident_title": "20230211_fcdep_S",
    "incident_date": "2023-02-11",
    "incident_description": "The project fcdep (EPMAX) on BSC was attacked by flash loan, and the loss was about 350,000 US dollars.\n\nhttps://twitter.com/HypernativeLabs/status/1624115631401336845\n\nAttack method: Flash Loan Attack",
    "avg_reported_damage_in_usd": 350000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 272,
    "incident_title": "20230213_DForce_C",
    "incident_date": "2023-02-13",
    "incident_description": "On Feb. 13, onchain security firm Peckshield noticed a security breach on the dForce network. DForce had suffered a reentrancy hack attack on two vaults and lost about $3.65 million. After the hack, dForce immediately paused the vaults to ensure the safety of the remaining funds.",
    "avg_reported_damage_in_usd": 0,
    "adversarial_contract": ""
  },
  {
    "incident_id": 273,
    "incident_title": "20230217_Platypus_C",
    "incident_date": "2023-02-17",
    "incident_description": "The $8 million Platypus flash loan attack was made possible because of code that was in the wrong order, according to a post-mortem report from Platypus auditor Omniscia. The auditing company claims the problematic code didn’t exist in the version they audited\n\nhttps://cointelegraph.com/news/platypus-attack-exploited-incorrect-ordering-of-code-auditor-claims\n\nAttack Method: Flash Loan Attack\n\n\n",
    "avg_reported_damage_in_usd": 8000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 274,
    "incident_title": "20230227_LaunchZone_C",
    "incident_date": "2023-02-27",
    "incident_description": "BNB Chain-based DeFi protocol LaunchZone claims an exploit led to $700,000 of funds being drained from its liquidity pool, with its native token plunging in value.\n\nhttps://cointelegraph.com/news/700-000-drained-from-bnb-chain-based-defi-protocol-launchzone\n\nBSC",
    "avg_reported_damage_in_usd": 700000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 275,
    "incident_title": "20230217_Dexible_S",
    "incident_date": "2023-02-17",
    "incident_description": "The DEX tool Dexible was suspected of being attacked and lost about $2 million. According to the analysis, there is a logical loophole in the selfSwap function of the Dexible contract, which will call the fill function. This function has a call to the attacker's custom data, and the attacker constructs a transferfrom function in this data, and transfers other users (0x58f5f0684c381fcfc203d77b2bba468ebb29b098) address and its own attack address (0x684083f312ac50f538cc4b634d85a2feafaab77a), causing the tokens authorized by the user to the contract to be transferred by the attacker.\n\nhttps://www.panewslab.com/zh/sqarticledetails/y4jol3pw.html\n\nAttack method: Logic Vulnerability",
    "avg_reported_damage_in_usd": 2000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 276,
    "incident_title": "20230220_RevertFi_S",
    "incident_date": "2023-02-20",
    "incident_description": "The AMM liquidity management protocol Revert Finance disclosed on Twitter that its v3utils contract was attacked, and 90% of the funds were stolen from a single account. The stolen assets included: 22983.235188 USDC, 4106.316699 USDT, 485.5786287699002 OP, 0.18217977664322793 WETH, 36.59093198260223 DAI, 211.21463945524238 WMATIC and 22 Premia. At current prices, that's about $29,000.\n\nhttps://twitter.com/revertfinance/status/1627490043026890752\n\nAttack method: Contract Vulnerability",
    "avg_reported_damage_in_usd": 29000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 277,
    "incident_title": "20230219_BABYDOLL_S",
    "incident_date": "2023-02-19",
    "incident_description": "The Baby Doll (BABYDOLL) project was hit by a flash loan attack, losing 25 BNB (~$7,900). BSC contract address is 0x449cfecbc8e8469eeda869fca6cccd326ece0c04a1cdd96b23d21f3b599adee2\n\nhttps://www.panewslab.com/zh/sqarticledetails/o9vi6cpj.html\n\nAttack method: Flash Loan Attack\n\nBSC",
    "avg_reported_damage_in_usd": 7900,
    "adversarial_contract": ""
  },
  {
    "incident_id": 278,
    "incident_title": "20230227_DungeonSwap_S",
    "incident_date": "2023-02-27",
    "incident_description": "The DeFi project DND Token (DungeonSwap Token) on BSC has been utilized. The initial funds came from TornadoCash, and the attackers stole over 2,400 BNB (approximately $728,000) from Dungeonswap.\n\nhttps://twitter.com/MetaSleuth/status/1630210958084952065\n\nAttack method: Contract Vulnerability\n\nBSC",
    "avg_reported_damage_in_usd": 728000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 279,
    "incident_title": "20230306_PeopleDao_C",
    "incident_date": "2023-03-06",
    "incident_description": "PeopleDAO, a group formed to buy a copy of the U.S. Constitution, has lost 76.5 ETH ($120,000) to a social engineering hack on March 6 that targeted the project’s monthly contributor payout form on Google Sheets.\n\nhttps://www.theblock.co/post/219214/peopledao-hacked-via-google-sheets\n\nBSC\n\nAttack Method: Social Engineer",
    "avg_reported_damage_in_usd": 120000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 280,
    "incident_title": "20230309_Hedera_CR",
    "incident_date": "2023-03-09",
    "incident_description": "Hedera, the team behind distributed ledger Hedera Hashgraph, has confirmed a smart contract exploit on the Hedera Mainnet that has led to the theft of several liquidity pool tokens\n\nhttps://cointelegraph.com/news/hedera-confirms-exploit-on-mainnet-led-to-theft-of-service-tokens\n\nAttack Method: Network vulnerability",
    "avg_reported_damage_in_usd": "N/A",
    "adversarial_contract": ""
  },
  {
    "incident_id": 281,
    "incident_title": "20230314_EulerFi_CRS",
    "incident_date": "2023-03-13",
    "incident_description": "The DeFi lending protocol Euler Finance was attacked, and the attackers made a profit of about 197 million US dollars. The attacker used flashloans to deposit funds and then leveraged them twice to trigger the liquidation logic, donating the funds to the reserve address and conducting a self-liquidation to collect any remaining assets. Two key factors contributed to the success of the attack: 1. Funds were donated to the reserved address without being subjected to a liquidity check. This created a mechanism that could directly trigger soft liquidation. 2. When the soft liquidation logic was triggered by high leverage, the yield value increased, enabling the liquidator to obtain most of the collateral funds from the liquidated user's account by transferring only a portion of the liabilities to themselves. Given that the value of the collateral funds exceeded the value of the liabilities (which were only partially transferred due to the soft liquidation), the liquidator was able to successfully pass their health factor check (checkLiquidity) and withdraw the obtained funds. On April 4th, Euler Labs tweeted that after a successful negotiation, the attacker has returned all the funds stolen from the agreement on March 13th, because the attacker has returned the funds, the $1 million reward campaign launched by the foundation No new information will be accepted.\n\nhttps://twitter.com/SlowMist_Team/status/1635288963580825606\nhttps://www.coindesk.com/business/2023/03/13/euler-defi-protocol-exploited-for-nearly-185m/\nhttps://rekt.news/euler-rekt/\n\n\nAttack method: Flash Loan Attack\n\n",
    "avg_reported_damage_in_usd": 197000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 282,
    "incident_title": "20230329_SafeMoon_CSR",
    "incident_date": "2023-03-29",
    "incident_description": "Safemoon, a DeFi protocol based on the BNB chain, was attacked, and its liquidity pool lost nearly $8.9 million. Safemoon CEO John Karony said on Twitter: \"This security incident affected the SFM:BNB LP pool and other LP pools on DEX were not affected. We have located the suspected vulnerability and fixed it. \" According to analysis, the recent update may have introduced a \"public destruction vulnerability\", which facilitated hacker attacks. The hacker was able to use code functionality to artificially inflate the price of SFM tokens, then sell enough tokens back to the liquidity pool in the same transaction, effectively draining WBNB from the contract. On April 20, the SafeMoon attacker returned 80% of the stolen funds, that is, transferred 21,804 BNB (approximately $7.2 million) to the SafeMoon vault wallet, leaving the remaining 20% as a bounty.\n\nhttps://www.coindesk.com/tech/2023/03/29/safemoon-lp-exploited-for-89m-sfm-tokens-remain-safe-ceo-says/\nttps://twitter.com/CptHodl/status/1640914110350016512\nhttps://rekt.news/safemoon-rekt/\n\nAttack method: Contract Vulnerability\n\nBSC",
    "avg_reported_damage_in_usd": 9000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 283,
    "incident_title": "20230313_PoolzFi_S",
    "incident_date": "2023-03-15",
    "incident_description": "Poolz Finance's LockedDeal contract was hacked and lost about $500,000. The attacker called the vulnerable function CreateMassPools in the LockedDeal contract, and triggered an integer overflow vulnerability in the parameter _StartAmount. In addition to obtaining a large number of poolz tokens, the attacker also obtained other tokens.\n\nhttps://twitter.com/Poolz__/status/1635899850918178817\n\nAttack method: Contract Vulnerability",
    "avg_reported_damage_in_usd": 500000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 284,
    "incident_title": "20230321_indexedFi_S",
    "incident_date": "2023-03-21",
    "incident_description": "Indexed Finance's ORCL5 Token contract was attacked by a flash loan and lost $9,925. Root cause preliminary analysis is that \"calcSingleOutGivenPoolIn()\" calculates wrong value of tokenAmountOut.\n\nhttps://twitter.com/AnciliaInc/status/1637925297327865856\n\nAttack method: Flash Loan Attack",
    "avg_reported_damage_in_usd": 9925,
    "adversarial_contract": ""
  },
  {
    "incident_id": 285,
    "incident_title": "20230325_SwerveFi_S",
    "incident_date": "2023-03-25",
    "incident_description": "Defunct Swerve Finance still subject of $1.3 million live governance hack\n\nhttps://www.chaincatcher.com/article/2089961\n\nAttack method: Governance Attack",
    "avg_reported_damage_in_usd": 1300000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 286,
    "incident_title": "20230319_harvestKeeper_S",
    "incident_date": "2023-03-19",
    "incident_description": "According to news, the Harvest_Keeper project maliciously transferred user funds, involving an amount of about 933,000 US dollars. Through the data on the chain, it was found that the attacker used the owner authority to transfer the USDT pledged by the user in the HarvestKeeper contract by calling the getAmount function, and then the attacker used the user's token authorization to the EOA account to transfer the user's funds through the EOA multiple times.\n\nhttps://www.panewslab.com/zh/sqarticledetails/7urkn6lh.html\n\nAttack method: Insider Manipulation\n\nBSC",
    "avg_reported_damage_in_usd": 933000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 287,
    "incident_title": "20230324_Fastswap_S",
    "incident_date": "2023-03-24",
    "incident_description": "The FASTSWAP (FAST) project on BNB Chain was attacked by a flash loan and lost 26.77 BNB\n\nhttps://foresightnews.pro/news/h5Detail/20030\n\nAttack method: Flash Loan Attack\n\nBSC",
    "avg_reported_damage_in_usd": "8629,57",
    "adversarial_contract": ""
  },
  {
    "incident_id": 288,
    "incident_title": "20230409_Sushi_CSR",
    "incident_date": "2023-04-09",
    "incident_description": "SUSHI RouteProcessor2 was attacked and lost about 1800 ETH, about $3.34 million. According to the analysis of SlowMist, the root cause is that ProcessRoute does not perform any checks on the route parameters passed in by the user, which leads the attacker to use this problem to construct a malicious route parameter so that the Pool read by the contract is created by the attacker. On April 19, SushiSwap released a postmortem analysis report stating that due to 18 replayed transactions, the 1,800 WETH initially depleted from the first user’s wallet ended up in multiple wallets. A total of 885 ETH have been refunded so far. Of these, approximately 685 ETH were sent to Sushi core contributors to operate the multisig, 190 ETH were sent to affected users, and 10 ETH were sent to the Sushi rescue contract.\n\nhttps://twitter.com/SlowMist_Team/status/1644936375924584449\nhttps://www.theblock.co/post/225473/sushiswap-hack?utm_source=twitter&utm_medium=social\nhttps://rekt.news/sushi-yoink-rekt/\n\n\nAttack method: Unchecked Input Data\n\n",
    "avg_reported_damage_in_usd": 3340000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 289,
    "incident_title": "20230412_MetaPoint_S",
    "incident_date": "2023-04-12",
    "incident_description": "MetaPoint ($POT) on BSC was hacked with a loss of $920K. The root cause is that users will create a new contract to hold their funds each time they deposit $POT, but the contract has a public approve function to transfer all users' assets.\n\nhttps://twitter.com/BeosinAlert/status/1645976721378934785\n\nAttack method: Contract Vulnerability\n\nBSC",
    "avg_reported_damage_in_usd": 920000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 290,
    "incident_title": "20230414_YearnFi_CSR",
    "incident_date": "2023-04-13",
    "incident_description": "The decentralized revenue aggregation platform Yearn Finance was attacked, and the hackers made more than $10 million in profits. According to the analysis of SlowMist, the reason for this attack is that the attacker used the yUSDT contract to set the fulcrum address by mistake, thereby manipulating the stablecoin reserve balance in the yUSDT contract, and depositing USDT in yUSDT to obtain a large amount of unexpected yUSDT Tokens for profit.\n\nhttps://decrypt.co/136918/hacker-exploits-hundred-finance-protocol-in-7-4-million-heist\nhttps://twitter.com/yearnfi/status/1646436798086672385\nhttps://rekt.news/yearn2-rekt/\n\nAttack method: Contract Vulnerability",
    "avg_reported_damage_in_usd": 10000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 291,
    "incident_title": "20230415_HundredFi_CR",
    "incident_date": "2023-04-15",
    "incident_description": "The multi-chain lending protocol Hundred Finance disclosed Saturday that it lost around $7 million after being hacked on the Ethereum layer-2 blockchain Optimism.\n\nhttps://decrypt.co/136918/hacker-exploits-hundred-finance-protocol-in-7-4-million-heist\nhttps://rekt.news/hundred-rekt2/\n\nAttack Method: Reentrancy",
    "avg_reported_damage_in_usd": 7400000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 292,
    "incident_title": "20230428_0vix_C",
    "incident_date": "2023-04-28",
    "incident_description": "Decentralized-finance protocol 0VIX has lost roughly $2 million in a flash-loan exploit, according to on-chain data on Polygon’s block explorer.\nA total of 1.45 million USDC, along with other tokens, was stolen before being bridged to the Ethereum mainnet on Stargate Finance, where it was eventually swapped for ether (ETH).\n\nhttps://decrypt.co/138023/rogue-developers-drain-merlin-dex-of-1-82-million",
    "avg_reported_damage_in_usd": 1082000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 293,
    "incident_title": "20230417_KyberSwap_S",
    "incident_date": "2023-04-17",
    "incident_description": "KyberSwap, a DEX aggregator and liquidity platform, tweeted that they discovered a potential loophole in KyberSwap Elastic, and hoped that liquidity providers could extract liquidity as soon as possible. No user assets have been lost so far.\n\nhttps://twitter.com/KyberNetwork/status/1647920799557505028\n\nAttack method: Contract Vulnerability",
    "avg_reported_damage_in_usd": "N/A",
    "adversarial_contract": ""
  },
  {
    "incident_id": 294,
    "incident_title": "20230502_LevelFi_SR",
    "incident_date": "2023-05-02",
    "incident_description": "LEVEL Finance, a project on BNB, was hacked and lost $1 million. The hackers created an unverified contract 7 days before the attack, used a delegate function to extract LVL tokens in 15,000 increments, converted 214,000 LVL tokens into 3,345 BNB and transferred them to Tornado Cash.\n\nhttps://twitter.com/level__finance/status/1653140756540825638?s=46&t=DLwbX9Nw4QECiyZQ0av-fg\nhttps://rekt.news/level-finance-rekt/\n\nAttack method: Contract Vulnerability\n\nBSC",
    "avg_reported_damage_in_usd": 1000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 295,
    "incident_title": "20230509_MChain_S",
    "incident_date": "2023-05-09",
    "incident_description": "MChainCapital suffered a flash loan attack and lost about $18,871. TX: https://etherscan.io/tx/0xf72f1d10fc6923f87279ce6c0aef46e372c6652a696f280b0465a301a92f2e26\n\nhttps://twitter.com/NumenAlert/status/1655851512445403138\n\nAttack method: Flash Loan Attack",
    "avg_reported_damage_in_usd": 18871,
    "adversarial_contract": ""
  },
  {
    "incident_id": 296,
    "incident_title": "20230510_SNK_S",
    "incident_date": "2023-05-10",
    "incident_description": "The SNK project was attacked. The hacker used SNK's invitation reward mechanism to make a profit of 190,000 US dollars.\n\nhttps://www.panewslab.com/zh/sqarticledetails/iizfq6j2.html\n\nAttack method: Reward Mechanism Flaw\n\nBSC",
    "avg_reported_damage_in_usd": 190000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 297,
    "incident_title": "20230510_FLOKI_S",
    "incident_date": "2023-05-10",
    "incident_description": "The ethereum-based meme cryptocurrency FLOKI has suffered a lightning loan attack with a loss of over $50,000. Stolen TX: https://etherscan.io/tx/0x118b7b7c11f9e9bd630ea84ef267b183b34021b667f4a3061f048207d266437a\n\nhttps://etherscan.io/tx/0x118b7b7c11f9e9bd630ea84ef267b183b34021b667f4a3061f048207d266437a\n\nAttack method: Flash Loan Attack",
    "avg_reported_damage_in_usd": 50000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 298,
    "incident_title": "20230510_WEEB_S",
    "incident_date": "2023-05-10",
    "incident_description": "The WEEB project was attacked by price manipulation. The hacker used the performUpkeep function in the WEEB token to burn the balance of a large number of WEEB tokens in the pair, thereby increasing the price of WEEB and making a profit of 16 ETH.\nhttps://www.panewslab.com/zh/sqarticledetails/iizfq6j2.html\nAttack method: Price Manipulation",
    "avg_reported_damage_in_usd": 29478,
    "adversarial_contract": ""
  },
  {
    "incident_id": 299,
    "incident_title": "20230530_EDE_S",
    "incident_date": "2023-05-30",
    "incident_description": "The perpetual DEX El Dorado Exchange (EDE) is suspected to have been attacked with losses of about $580,000, and an address has been sending small amounts of money to Arbitrum's ELP-1 pool and withdrawing large amounts immediately afterwards. The attacker claimed that the protocol backdoor allowed the developer to force the liquidation of any positions and would return the funds if the developer admitted to price manipulation. 334,000 USDC were returned by the attacker on May 30, and EDE founder Dorado said that the attacker should not be forced to do anything regardless of their moral stance. Dorado also revealed that the attackers charged 10% of the stolen funds as a fee when returning them.\n\nhttps://twitter.com/resdegen/status/1663322636594675713\n\nAttack method: Contract Vulnerability",
    "avg_reported_damage_in_usd": 580000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 300,
    "incident_title": "20230531_Sashimi_S",
    "incident_date": "2023-05-31",
    "incident_description": "A MEV bot (0xb2…2B96 is the MEV bot call contract, 0xb4…0343 is the single-use MEV bot) borrowed 95,000 WETH (worth nearly $180 million) via flash loan to attack Sashimi Swap. The bot swept away the last remaining money in Sashimi’s investment contract and slETH contract, but only about $3,500. It is reported that Sashimi Swap was attacked in December 2021 and lost $210,000, and the project was subsequently abandoned.\n\nhttps://twitter.com/ArkhamIntel/status/1664210608865042435\n\nAttack method: Flash Loan Attack",
    "avg_reported_damage_in_usd": 3500,
    "adversarial_contract": ""
  },
  {
    "incident_id": 301,
    "incident_title": "20230531_unshETH_S",
    "incident_date": "2023-05-31",
    "incident_description": "The LSDFi protocol unshETH stated that at around 22:00 on May 31, one of the deployment private keys of the unshETH contract was leaked. For the sake of caution, the official has urgently suspended the withdrawal of unshETH's ETH. According to the security model, unshETH's ETH deposit (TVL up to 35 million US dollars) is protected by multi-signature + time lock and is not at risk.\n\nhttps://twitter.com/unsheth_xyz/status/1664534089704275968\n\nAttack method: Private Key Leakage",
    "avg_reported_damage_in_usd": 375000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 302,
    "incident_title": "20230512_LW_S",
    "incident_date": "2023-05-12",
    "incident_description": "The LW token on BSC was attacked, with a loss of 48,415 USDT, and the price of LW token plummeted by 69%. The attackers have transferred about 150 BNB to Tornado Cash.\n\nhttps://www.panewslab.com/zh/sqarticledetails/4jq3adah.html\n\nAttack method: Contract Vulnerability\n\nBSC\n",
    "avg_reported_damage_in_usd": 48415,
    "adversarial_contract": ""
  },
  {
    "incident_id": 303,
    "incident_title": "20230515_land_S",
    "incident_date": "2023-05-15",
    "incident_description": "The DeFi protocol land was suspected of being attacked and lost about 150,000 US dollars. The reason for the attack was the lack of mint permission control.\n\nhttps://bscscan.com/address/0x2e599883715d2f92468fa5ae3f9aab4e930e3ac7#tokentxns\n\nAttack method: Contract Vulnerability\n\nBSC",
    "avg_reported_damage_in_usd": 150000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 304,
    "incident_title": "20230519_WDZD_S",
    "incident_date": "2023-05-19",
    "incident_description": "The DeFi protocol WDZD Swap on BSC was exploited and lost about $1.1 million. The attackers made nine malicious transactions that drained 609 Binance-Pegged ETH from contracts related to the WDZD project.",
    "avg_reported_damage_in_usd": 1100000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 305,
    "incident_title": "20230520_SwapLP_S",
    "incident_date": "2023-05-20",
    "incident_description": "The Swap-LP contract on BNB Chain (0xe0c352c56af65772ac7c9ab45b858cb43d22f28f) has been attacked with a loss of approximately $1.1 million. The attacker (0xdead) transferred the stolen funds to Tornado Cash. specifically, the attacker manipulated a low-level call in the Swap-LP factory address to trigger the 0x33604058 function of the SwapLP pair. This causes all WDZD tokens in the pair to be transferred to the factory address. As a result, the attacker is able to use fewer WDZDs to obtain more SWAP LPs from the unverified address 0x3c4e06d17e243e2cb2e4568249b6f7213c43c743 and subsequently destroy the LPs for profit.\n\nhttps://bscscan.com/address/0xdEAd40082286F7e57a56D6e5EFE242b9AC83B137\n\nAttack method: Contract Vulnerability\n\nBSC",
    "avg_reported_damage_in_usd": 1100000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 306,
    "incident_title": "20230524_CSToken_S",
    "incident_date": "2023-05-24",
    "incident_description": "CS Token was hacked and a total of 714,000 USDT was stolen. The hacker initially transferred 1 BNB from Tornado Cash, and then transferred 383 ETH to Tornado Cash.\n\nhttps://bscscan.com/tx/0x906394b2ee093720955a7d55bff1666f6cf6239e46bea8af99d6352b9687baa4\n\nAttack method: Contract Vulnerability\n\nBSC",
    "avg_reported_damage_in_usd": 714000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 307,
    "incident_title": "20230612_Sturdy_SR",
    "incident_date": "2023-06-12",
    "incident_description": "The DeFi lending protocol Sturdy is suspected to have been hacked, and information on the chain suggests that the attack may have been carried out through price manipulation. The attackers have transferred 442.6 ETH to Tornado Cash.\n\nhttps://etherscan.io/address/0x1e8419e724d51e87f78e222d935fbbdeb631a08b\nhttps://rekt.news/sturdy-rekt/\n\nAttack method: Price Manipulation",
    "avg_reported_damage_in_usd": 770000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 308,
    "incident_title": "20230611_TrustTheTrident_S",
    "incident_date": "2023-06-11",
    "incident_description": "TrustTheTrident ($SELLC) suffered an attack that resulted in approximately $95,000 in losses.\n\nhttps://bscscan.com/address/0x4beb05bf9bd4585ae2f4feb74112f18b423abb84\n\nAttack method: Contract Vulnerability\n\nBSC",
    "avg_reported_damage_in_usd": 95000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 309,
    "incident_title": "20230611_AtlantisLoans_SR",
    "incident_date": "2023-06-11",
    "incident_description": "A governance attack on the BSC eco-protocol Atlantis Loans, in which attackers gained control of the contract and replaced it with a contract containing backdoor functionality to transfer user assets, is currently costing approximately $1 million. The attackers created the malicious governance proposal in the GovernorBravo contract on June 7, 2023.\n\nhttps://rekt.news/atlantis-loans-rekt/\nhttps://bscscan.com/address/0xEADe071FF23bceF312deC938eCE29f7da62CF45b\n\nAttack method: Governance Attack\n\nBSC",
    "avg_reported_damage_in_usd": 1000000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 310,
    "incident_title": "20230618_MidasCap_SR",
    "incident_date": "2023-06-18",
    "incident_description": "Cross-chain money market solution Midas Capital has been hacked, causing losses of more than $600,000 after an integer rounding problem in its lending protocol (derived from a fork of the well-known Compound Finance v2 codebase) was exploited. The same situation was also exploited in the previous attack on Hundred Finance. The attacker deposited 400 BNB into Tornado Cash, and some other proceeds were bridged to Ethereum.\n\nhttps://rekt.news/midas-rekt2/\nhttps://www.panewslab.com/zh/articledetails/7xmbgnkh.html\n\nAttack method: Contract Vulnerability",
    "avg_reported_damage_in_usd": 600000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 311,
    "incident_title": "20230619_Ara_S",
    "incident_date": "2023-06-19",
    "incident_description": "The Ara project was attacked by a flash loan. The attackers are suspected to have made about $124,000 in BUSD. attacker address: 0xF84efA8a9F7E68855CF17EAaC9c2f97A9d131366.\n\nhttps://bscscan.com/address/0xf84efa8a9f7e68855cf17eaac9c2f97a9d131366\n\nAttack method: Flash Loan Attack\n\nBSC",
    "avg_reported_damage_in_usd": 124000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 312,
    "incident_title": "20230704_MikeSid_S",
    "incident_date": "2023-07-04",
    "incident_description": "Mike Wazowski Monsters Inc $MIKE and Sid Ice Age $SID on the Ethereum chain have been rugged via a backdoor function that allows unlimited minting of tokens. The scammer has profited 87.9 $ETH, equivalent to about $171,000.\n\nhttps://foresightnews.pro/news/detail/25656\n\nAttack method: Contract Vulnerability",
    "avg_reported_damage_in_usd": 171000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 313,
    "incident_title": "20230710_Arcadia_S",
    "incident_date": "2023-07-10",
    "incident_description": "Arcadia Finance has been attacked on Ethereum and Optimism, with total profits of $400K. The root cause is that in function vaultManagementAction, the attacker can first transfer all the asset to his own controlled contract and re-entry the function liquidateVault to liquidiate the vault. In this case, the global variable \"isTrustedCreditorSet\" will be set as false and the Collateral check can be bypassed.\n\nhttps://twitter.com/Phalcon_xyz/status/1678270672911605760\n\nAttack method: Contract Vulnerability",
    "avg_reported_damage_in_usd": 455000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 314,
    "incident_title": "20230701_Biswap_S",
    "incident_date": "2023-07-01",
    "incident_description": " BiSwap, a BSC cross-chain trading platform, said: \"The team detected and resolved the Migrator contract vulnerability. The assets on the Biswap V2 and V3 AMM protocols are safe. The team prevents access to the migration process through the website, because the Migrator contract has been exploited, do not try to access directly This contract, if you have not already done so, please withdraw your approval of these contracts. The results of this vulnerability are being reviewed in more detail and a report will be issued later. User funds are safe and the above vulnerability has nothing to do with AMM V2 and V3 funds.” This time The attack has caused approximately $710,000 in damage.\n \n https://twitter.com/Biswap_Dex/status/1674871633461272578\n \n Attack method: Contract Vulnerability\n \n BSC\n ",
    "avg_reported_damage_in_usd": 710000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 315,
    "incident_title": "20230713_Ethscriptions_S",
    "incident_date": "2023-07-13",
    "incident_description": " Ethscriptions.com was hacked, and about 123 individual addresses lost a total of about 202 Ethscriptions. In terms of value, it is unclear how much the attack caused. Based on the current lowest price of $14, the loss is at least $2,828. Ethscriptions creator Tom Lehman stated that this is not a vulnerability in the Ethscriptions protocol. This is a vulnerability in a specific smart contract (0x3ca843b98a2fe8ef69bb0f169afad3812c275f5e). The protocol itself and other applications running on it are not affected in any way. Meanwhile, Lehman claimed responsibility for the attack, explaining that the vulnerability can be traced back to a smart contract he and Indelible Labs co-founder Michael Hirsch created. It is reported that a small piece of code included in it allows people to withdraw Ethscriptions that do not belong to them from the market. Lehman also said that the Ethscriptions.com marketplace will be relaunched and that he has been in touch with many users affected by the bug.\n \n https://twitter.com/dumbnamenumbers/status/1679259067833786374\n \n Attack method: Contract Vulnerability",
    "avg_reported_damage_in_usd": 2828,
    "adversarial_contract": ""
  },
  {
    "incident_id": 316,
    "incident_title": "20230721_ConicFi_SR",
    "incident_date": "2023-07-21",
    "incident_description": "On July 21, Conic Finance ’s ETH omnipool was hit by a series of small hacks that cost around $3.2 million. Conic Finance issued an update on the attack, saying, “The root cause of the attack is due to an incorrect assumption about the address returned by the ETH’s Curve meta-registry in the Curve V2 pool, which enables reentrancy attacks and is deploying fixes for the affected contracts.\n\nhttps://rekt.news/conic-finance-rekt/\nhttps://twitter.com/ConicFinance/status/1682385596700844032\n\nAttack method: Reentrancy Attack",
    "avg_reported_damage_in_usd": 3200000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 317,
    "incident_title": "20230722_ConicFi_SR",
    "incident_date": "2023-07-22",
    "incident_description": "This second attack was unrelated to the ETH Omnipool's re-entrancy exploit. The attacker was able to realize a profit of approximately $300k by exploiting the crvUSD Omnipool. We will share more updates as we continue to investigate.\n\nhttps://twitter.com/ConicFinance/status/1682524319518269440\nhttps://rekt.news/conic-finance-rekt/\n\nAttack method: Flash Loan Attack",
    "avg_reported_damage_in_usd": 300000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 318,
    "incident_title": "20230730_Vyper_S",
    "incident_date": "2023-07-30",
    "incident_description": "On August 6, the Ethereum compiler Vyper released an analysis report on last week's vulnerability incidents: Prior to July 30, due to potential vulnerabilities in the Vyper compiler, multiple Curve liquidity pools were exploited. While the bug was identified and patched, the impact on protocols using the vulnerable compiler was not recognized at the time, nor were they explicitly notified. The vulnerability itself is an improperly implemented reentrancy prevention, and the affected Vype versions are v0.2.15, v0.2.16, v0.3.0. Vulnerability fixed and tested in v0.3.1, v0.3.1 and later are safe.\n\nhttps://hackmd.io/@vyperlang/HJUgNMhs2\n\nAttack method: Compiler Bug",
    "avg_reported_damage_in_usd": 0,
    "adversarial_contract": ""
  },
  {
    "incident_id": 319,
    "incident_title": "20230730_Alchemix_S",
    "incident_date": "2023-07-30",
    "incident_description": " DeFi lending protocol Alchemix said on Twitter that after receiving notification from Curve Finance that the altH/ETH pool was attacked due to a Vyper bug, Alchemix quickly began removing AMO-controlled liquidity from the Curve pool through the AMO contract. The exploit was performed on the Curve pool contract. The Alchemix smart contract has not been compromised in any way and funds are safe. executed on the contract. Three transactions are required: unstake LP tokens from Convex, withdraw alETH from Curve pool, and withdraw ETH from Curve pool. The first transaction above has been executed, and after the second transaction is executed, 8000 ETH is removed from the Curve pool. This means that there is still about 5,000 ETH liquidity controlled by AMO in the Curve pool. In the process of removing the remaining liquidity, the alETH/ETH Curve pool was drained by the attacker. Currently, the alETH reserve has lost about 5,000 ETH. On September 4th, Alchemix issued a document stating that a white hat MEV robot operator has returned 43.3 ETH profits obtained through arbitrage from the Curve alETH/ETH pool attack incident, which will be added to the redistribution of funds.\n \n https://twitter.com/AlchemixFi/status/1685737632133971968\n \n Attack method: Affected by Vyper Vulnerability",
    "avg_reported_damage_in_usd": 9308200,
    "adversarial_contract": ""
  },
  {
    "incident_id": 320,
    "incident_title": "20230730_Curve_SR",
    "incident_date": "2023-07-30",
    "incident_description": "Curve Finance tweeted that many stablecoin pools (alETH/msETH/pETH) using Vyper 0.2.15 were attacked due to a faulty recursive lock. crvUSD contracts and other fund pools are not affected. As of now, the Curve Finance stablecoin pool hack has caused a cumulative loss of $73.5 million to Alchemix, JPEG'd, MetronomeDAO, deBridge, Ellipsis, and CRV/ETH pools. On August 6, Alchemix tweeted that the Curve Finance hacker had returned all of Alchemix's funds in the Curve pool. On August 19, MetronomeDAO stated that a MEV bot named \"c0ffeebabe\" had recovered most of the stolen funds and returned them to Metronome.\n\nhttps://www.panewslab.com/zh/sqarticledetails/wu339f1f.html\nhttps://rekt.news/curve-vyper-rekt/\n\nAttack method: Affected by Vyper Vulnerability",
    "avg_reported_damage_in_usd": 73500000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 321,
    "incident_title": "20230712_WGPT_S",
    "incident_date": "2023-07-12",
    "incident_description": "On July 12th, WGPT Token suffered from a flash loan attack, resulting in losses of ~$82.5k. Address (BSC): 0x1f415255f7E2a8546559a553E962dE7BC60d7942.\n\nhttps://bscscan.com/address/0x1f415255f7e2a8546559a553e962de7bc60d7942\n\nAttack method: Flash Loan Attack\n\nBSC",
    "avg_reported_damage_in_usd": 82500,
    "adversarial_contract": ""
  },
  {
    "incident_id": 322,
    "incident_title": "20230718_APEDAO_S",
    "incident_date": "2023-07-18",
    "incident_description": "APEDAO on the BNB chain was attacked and the loss was approximately $7,000. The attacker transferred APEDAO to the pair contract. The APEDAO contract mistook the attacker's behavior as a selling operation and gradually accumulated a value named \"amountToDead\". The attacker repeatedly transferred APEDAO and then used the skim function to withdraw excess tokens. Eventually, the attacker calls the godead function to destroy APEDAO held in the pairing contract, causing the token price to rise.\n\nhttps://twitter.com/BeosinAlert/status/1681316257034035201\n\nAttack method: Contract Vulnerability\n\nBSC",
    "avg_reported_damage_in_usd": 7000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 323,
    "incident_title": "20230718_BNO_S",
    "incident_date": "2023-07-18",
    "incident_description": "BNO suffered a flash loan attack on BNBChain, resulting in a loss of about $500,000 due to business logic problems. The root cause of the attack is a problem with the reward calculation mechanism in the pool that supports NFT and ERC20 token rights. The pool has an \"emergencyWithdraw\" function that allows users to withdraw their ERC20 token stake immediately. Crucially, however, this feature does not process or interpret NFT stake records. Attackers exploited this flaw by depositing NFTs and ERC20 tokens into a pool and then executing the \"emergencyWithdraw\" function specifically for their ERC20 tokens. By doing so, an attacker can bypass the reward calculation check, effectively manipulating the system to his advantage. Through this manipulation, an attacker is able to clear a user's \"reward debt,\" earn undeserved rewards, and cause significant financial damage to the mining pool and its users.\n\nhttps://blog.solidityscan.com/bno-hack-analysis-15436d73e44e\n\nAttack method: Flash Loan Attack\n\nBSC\n",
    "avg_reported_damage_in_usd": 500000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 324,
    "incident_title": "20230725_MetaLabz_S",
    "incident_date": "2023-07-25",
    "incident_description": "MetaLabz tweeted: \"In order to ensure the supply we hold, we deployed an unaudited contract (token locker), but the contract has been exploited. The situation was then exacerbated by the liquidity attack, resulting in a total loss of slightly more than 400 BNB.\" According to analysis, the reason is that the authorization check was bypassed.\n\nAttack method: Contract Vulnerability\n\nhttps://twitter.com/Meta_labz/status/1683576178039308288\n\nBSC",
    "avg_reported_damage_in_usd": 95124,
    "adversarial_contract": ""
  },
  {
    "incident_id": 325,
    "incident_title": "20230727_Carson_S",
    "incident_date": "2023-07-27",
    "incident_description": "The BSC ecology Carson was attacked and lost about $145,000. At present, the price of Carson tokens has dropped by 96%, and the attacker has exchanged the stolen assets for 600 BNB and transferred them to Tornado Cash. The attacker repeatedly called the swapExactTokensForTokensSupportingFeeOnTransferTokens function in the 0x2bdf...341a contract (not open-source) through flash loans, swapped for BUSD and burned Carson in the pair, then repeatedly inflated the price of Carson for profit.\n\nhttps://twitter.com/BeosinAlert/status/1684393202252402688?s=20\n\nAttack method: Flash Loan Attack\n\nBSC",
    "avg_reported_damage_in_usd": 145000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 326,
    "incident_title": "20230725_Palmswap_S",
    "incident_date": "2023-07-25",
    "incident_description": "The Palmswap project on the BSC chain was attacked, and the attacker made a profit of more than 900,000 US dollars. According to the analysis of SlowMist, this attack was due to the fact that the authority control function of the core function was not enabled, and the price calculation model of the liquidity token was designed too simply, depending only on the number of USDT tokens in the treasury and the total supply, resulting in the attacker can use flash loans to maliciously manipulate prices to obtain unexpected profits. On July 28, Palmswap tweeted that 80% of the stolen funds had been returned, and the remaining 20% was used as a bug bounty for hackers.\n\nhttps://mp.weixin.qq.com/s/qoZaQbPZMx4nuP-I8EgCEA\n\nAttack method: Flash Loan Attack\n\nBSC",
    "avg_reported_damage_in_usd": 900000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 327,
    "incident_title": "20230802_InsurAce_S",
    "incident_date": "2023-08-02",
    "incident_description": "InsurAce, a DeFi insurance protocol, tweeted: \"Our Discord server experienced a security breach. Our team discovered an unauthorized access to the server earlier today. We take this incident very seriously and are working hard to correct the situation. During this time, please do not interact with the server.\" According to the analysis of SlowMist, the phishing website is insurance.gift, and PinkDrainer is behind it.\n\nhttps://twitter.com/InsurAce_io/status/1686664525813358593\n\nAttack method: Twitter was hacked",
    "avg_reported_damage_in_usd": "n/a",
    "adversarial_contract": ""
  },
  {
    "incident_id": 328,
    "incident_title": "20230802_Uwerx_S",
    "incident_date": "2023-08-02",
    "incident_description": "The Uwerx network was attacked and lost about 174.78 ETH. According to the analysis of SlowMist, the root cause is that when the receiving address is uniswapPoolAddress (0x01), it will burn off 1% more tokens of the transfer amount of the from address, so the attacker uses the skim function of the uniswapv2 pool to consume a large number of WERX tokens, and then calls the sync function to maliciously inflate the price of the token, and then reverses the swap to extract the ETH to gain profit.\n\nhttps://twitter.com/SlowMist_Team/status/1686674169189249024\n\nAttack method: Price Manipulation",
    "avg_reported_damage_in_usd": 324000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 329,
    "incident_title": "20230808_Steadefi_S",
    "incident_date": "2023-08-08",
    "incident_description": "Steadefi, an automated yield leveraged strategy platform, tweeted: “Our protocol deployer wallet (which is also the owner of all vaults in the protocol) has been compromised. Attackers have transferred ownership of all vaults (borrows and strategies) to them in a wallet controlled by the user and continue to take various owner-only operations, such as allowing any wallet to be able to borrow any available funds from the lending vault. Currently, all available lending capacity on Arbitrum and Avalanche has been exhausted by the attackers, and the assets have been swapped for ETH and bridged to Ethereum. On-chain messages have been sent to the attacker wallet address for negotiation. Steadefi wants to discuss the bounty with parties involved in the exploit, offering a 10% reward on the stolen funds. \" Steadefi has lost approximately $1.1 million in the incident. On August 8, the Steadefi team managed to recover approximately $540,000 in user funds from remaining vaults.\n\nhttps://twitter.com/steadefi/status/1688619454178144264\n\nAttack method: Private Key Leakage\n\n\n",
    "avg_reported_damage_in_usd": 1100000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 330,
    "incident_title": "20230809_EarningFarm_S",
    "incident_date": "2023-08-09",
    "incident_description": "The DeFi project Earning.Farm suffered a reentrancy attack and lost 286 ETH (approximately $530,000). According to the analysis of SlowMist, the attacker re-enters the transfer function of LP to transfer LP tokens when withdrawing money, making the balance of the account smaller than the previously calculated shares value, triggering the logic of updating the shares value, resulting in the number of manipulated LPs being updated to the desired value. In terms of the value of the burned shares, this resulted in the final amount of LP burned being much smaller than expected, and the user can withdraw the funds in the pool by withdrawing the transferred LP again.\n\nhttps://etherscan.io/address/0xee4b3dd20902Fa3539706F25005fa51D3b7bDF1b\n\nAttack method: Reentrancy Attack\n\n",
    "avg_reported_damage_in_usd": 530000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 331,
    "incident_title": "20230814_Zunami_SR",
    "incident_date": "2023-08-14",
    "incident_description": "The Zunami Protocol on Ethereum suffered a price manipulation attack and lost 1,179 ETH (approximately $2.2 million). The reason for the incident is that the calculation of LP price in the vulnerable contract depends on the CRV balance of the contract itself and the conversion ratio of CRV in the wETH/CRV pool. The attacker manipulated the LP price by transferring CRV to the contract and manipulating the conversion ratio of the wETH/CRV pool. According to MistTrack analysis, ETH has been transferred to Tornado Cash at present.\n\nhttps://rekt.news/zunami-protocol-rekt/\nhttps://www.odaily.news/newsflash/332604?source=share\n\nAttack method: Price Manipulation",
    "avg_reported_damage_in_usd": 2200000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 332,
    "incident_title": "20230815_MetisDao_S",
    "incident_date": "2023-08-15",
    "incident_description": "The official Twitter account of Ethereum expansion solution Metis was stolen. According to officials, team members fell victim to a Sim Swap attack, resulting in malicious actors being able to take over the account for approximately 30 hours.\n\nhttps://twitter.com/wublockchain12/status/1691297467361550336?s=46&t=DLwbX9Nw4QECiyZQ0av-fg\n\nAttack method: Twitter was hacked",
    "avg_reported_damage_in_usd": "n/a",
    "adversarial_contract": ""
  },
  {
    "incident_id": 333,
    "incident_title": "20230818_Exactly_SR",
    "incident_date": "2023-08-18",
    "incident_description": "The DeFi lending protocol Exactly Protocol was attacked and lost more than 7,160 ETH (approximately $12.04 million). The two contract attackers attack by calling the function kick() multiple times and use the developer contract on Ethereum to transfer deposits to Optimism and eventually transfer the stolen funds back to Ethereum. The root cause of the Exactly Protocol attack is #insufficient_check, the attacker bypasses the permission check in the leverage function of the DebtManager contract by directly passing an unverified fake market address and changing _msgSender to the victim address. Then, in an untrusted external call, the attacker re-enters the crossDeleverage function in the DebtManager contract and steals the collateral from the _msgSender class. Exactly Protocol tweeted that the suspension of the agreement has been lifted, users can perform all operations, and no liquidation has occurred. The hack only affected users using the peripheral contract (DebtManager), the protocol is still functioning normally.\n\nhttps://www.wu-talk.com/index.php?m=content&c=index&a=show&catid=46&id=17283\nhttps://rekt.news/exactly-protocol-rekt/\n\nAttack method: Unchecked Input Data",
    "avg_reported_damage_in_usd": 7300000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 334,
    "incident_title": "20230822_Balancer_SR",
    "incident_date": "2023-08-22",
    "incident_description": "Balancer says it has received reports of a critical vulnerability affecting multiple V2 pools. Emergency mitigation procedures have been implemented to secure the majority of TVL, but some funds remain at risk. Users are advised to immediately withdraw affected LPs. According to news on August 28, Balancer’s losses have exceeded $2.1 million, and multiple fund pools on Ethereum, Fantom, and Optimism have been affected.\n\nhttps://twitter.com/balancer/status/1694014645378724280\nhttps://rekt.news/balancer-rekt/\n\nAttack method: Flash Loan Attack\n",
    "avg_reported_damage_in_usd": 210000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 335,
    "incident_title": "20230830_Starkware_S",
    "incident_date": "2023-08-30",
    "incident_description": "For months, Ethereum layer 2 solution Starkware has repeatedly warned users that their funds would be lost if they did not take action before upgrading, but some users apparently did not see these notifications, which resulted in many users being locked out. Locked out of StarkWare accounts, losing access to funds, totaling $550,000 in affected accounts. Due to community pressure, Starkware has re-enabled the ability to upgrade wallets.\n\nhttps://fullycrypto.com/starkware-bows-to-pressure-over-lost-funds\n\nAttack method: Wallet not upgraded\n",
    "avg_reported_damage_in_usd": 550000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 336,
    "incident_title": "20230820_Thales_S",
    "incident_date": "2023-08-20",
    "incident_description": "Derivatives marketplace Thales issued an announcement that a core contributor’s PC/Metamask had been hacked and that some hot wallets acting as casual deployers ($25k) or admin bots ($10k) had been compromised. Do not interact with any Thalesmarket contracts on the BNB Chain and revoke any contracts that are pending approval. All funds are safe on Optimism, Arbitrum, Polygon and Base. Thales said that due to the attack, support for the BSC will be officially dropped.\n\nhttps://twitter.com/thalesmarket/status/1692935883521953997?s=46&t=DLwbX9Nw4QECiyZQ0av-fg\n\nAttack method: Information Leakage",
    "avg_reported_damage_in_usd": 35000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 337,
    "incident_title": "20230912_ODexPool_S",
    "incident_date": "2023-09-12",
    "incident_description": "OxODexPool suffered from a flash loan. ETH: 0x6128d5F7c64Dab48a1C66f9D62EaeFa1d5aA03ed. Approximately 40 ETH (~$61k) was lost. The stolen funds currently reside in the attacker's wallet.\n\nhttps://twitter.com/Cointime_CN/status/1701420147616145422\n\nAttack method: Flash Loan Attack",
    "avg_reported_damage_in_usd": 61000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 338,
    "incident_title": "20230907_HCT_S",
    "incident_date": "2023-09-07",
    "incident_description": "We have detected a malicious flash loan on HCT token. BSC: 0x0FDfcfc398Ccc90124a0a41d920d6e2d0bD8CcF5. Approximately 30.5 BNB was lost. 30 BNB has been deposited into Tornado Cash by EOA 0xC89.\n\nhttps://twitter.com/leo_web3sec/status/1699775506785198499\n\nAttack method: Flash Loan Attack\n\nBSC\n",
    "avg_reported_damage_in_usd": 6612,
    "adversarial_contract": ""
  },
  {
    "incident_id": 339,
    "incident_title": "20230910_BFCToken_S",
    "incident_date": "2023-09-10",
    "incident_description": "BFCToken suffered from a flash loan attack, resulting in losses of ~$38k. BSC: 0x595eac4a0ce9b7175a99094680fbe55a774b5464. The attacker was able to burn BFCTokens from the pool at no expense by exploiting the \"_transfer\" function.\n\nAttack method: Flash Loan Attack\n\nhttps://bscscan.com/address/0x595eac4a0ce9b7175a99094680fbe55a774b5464\n\nBSC\n",
    "avg_reported_damage_in_usd": 38000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 340,
    "incident_title": "20230921_Linear_S",
    "incident_date": "2023-09-21",
    "incident_description": "On September 21st, the Linear stable coin $LUSD appears to be under an exploit attack. While the team investigates, do not buy LUSD, do not trade $LUSD. Liquidations are paused and users accounts are not at risk.\n\nhttps://twitter.com/LinearFinance/status/1704818417880936535\n\nAttack method: Contract Vulnerability\n\nBSC",
    "avg_reported_damage_in_usd": "n/a",
    "adversarial_contract": ""
  },
  {
    "incident_id": 341,
    "incident_title": "20230924_Kub_S",
    "incident_date": "2023-09-24",
    "incident_description": "There was a flash loan exploit on Kub/Kub-split. The attacker gained ~$78.4k via pool manipulation. Contract: 0xc98E183D2e975F0567115CB13AF893F0E3c0d0bD.\n\nhttps://bscscan.com/address/0xc98e183d2e975f0567115cb13af893f0e3c0d0bd\n\nAttack method: Flash Loan Attack\n\nBSC\n",
    "avg_reported_damage_in_usd": 78400,
    "adversarial_contract": ""
  },
  {
    "incident_id": 342,
    "incident_title": "20230926_XSDWETHpool_S",
    "incident_date": "2023-09-26",
    "incident_description": "On September 26th, XSDWETHpool On BSC was exploited for ~$12.1k in a flash loan attack. The attacker created a malicious contract to interact with the pool contract and gained 56.96 WBNB. Pool Contract: 0xbfBcB8BDE20cc6886877DD551b337833F3e0d96d.\n\nhttps://bscscan.com/address/0xbfbcb8bde20cc6886877dd551b337833f3e0d96d\n\nAttack method: Flash Loan Attack\n\nBSC\n",
    "avg_reported_damage_in_usd": 12100,
    "adversarial_contract": ""
  },
  {
    "incident_id": 343,
    "incident_title": "20231005_DePay_S",
    "incident_date": "2023-10-05",
    "incident_description": "There is a flashloan attack on the DePay platform that resulted in the theft of 827 USDC. The exploiter used a security issue with DePay router to steal the USDC.\n\nhttps://etherscan.io/address/0xae60ac8e69414c2dc362d0e6a03af643d1d85b92\n\nAttack method: Flash Loan Attack",
    "avg_reported_damage_in_usd": 827,
    "adversarial_contract": ""
  },
  {
    "incident_id": 344,
    "incident_title": "20231008_pSeudoEth_S",
    "incident_date": "2023-10-08",
    "incident_description": "On Oct 8, the pSeudoEth token on ETH was exploited for ~$2.3K in a flash loan attack. Contract: 0x62aBdd605E710Cc80a52062a8cC7c5d659dDDbE7. Attacker: 0xea75AeC151f968b8De3789CA201a2a3a7FaeEFbA.\n\nhttps://etherscan.io/tx/0x4ab68b21799828a57ea99c1288036889b39bf85785240576e697ebff524b3930\n\nAttack method: Flash Loan Attack\n",
    "avg_reported_damage_in_usd": 2300,
    "adversarial_contract": ""
  },
  {
    "incident_id": 345,
    "incident_title": "20231008_Astrid_S",
    "incident_date": "2023-10-28",
    "incident_description": "The Ethereum liquidity restaking pool Astrid was attacked due to a vulnerability in the withdrawal function, resulting in a loss of approximately $228,000.. The parameters of the `withdraw()` function, specifically the token address and token amount, were exploitable. On October 29, the hackers returned 80% of the stolen funds (102 ETH).\n\nhttps://twitter.com/AstridFinance/status/1718254655288066501\n\nAttack method: Contract Vulnerability\n\n",
    "avg_reported_damage_in_usd": 228000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 346,
    "incident_title": "20231012_BlackHole_S",
    "incident_date": "2023-10-12",
    "incident_description": "BH Token (BlackHole token) suffered an attack. The exploiter (0xFDb) gained 1.2 M USDT. Funds are being swapped for BNB and deposited into Tornado Cash. Contract Address: 0xCC61CC9F2632314c9d452acA79104DDf680952b5. Exploiter Address: 0xFDbfcEEa1de360364084a6F37C9cdb7AaeA63464.\n\nhttps://bscscan.com/address/0xCC61CC9F2632314c9d452acA79104DDf680952b5\n\nAttack method: Price Manipulation\n\nBSC",
    "avg_reported_damage_in_usd": 1200000,
    "adversarial_contract": ""
  },
  {
    "incident_id": 347,
    "incident_title": "20231019_MicDao_S",
    "incident_date": "2023-10-19",
    "incident_description": "MicDao suffered from a flash loan attack. The attacker gained $12,263. Contract address: 0xf6876f6AB2637774804b85aECC17b434a2B57168.\n\nhttps://bscscan.com/address/0xf6876f6AB2637774804b85aECC17b434a2B57168\n\nAttack method: Flash Loan Attack\n\nBSC\n",
    "avg_reported_damage_in_usd": 12263,
    "adversarial_contract": ""
  }
]